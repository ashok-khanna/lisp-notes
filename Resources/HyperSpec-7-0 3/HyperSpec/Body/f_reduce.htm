<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Function REDUCE</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_map_in.htm">
<LINK REL=UP HREF="c_sequen.htm">
<LINK REL=NEXT HREF="f_countc.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="f_map_in.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_sequen.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="f_countc.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="reduce"><I>Function</I> <B>REDUCE</B></A> <P>
<P><B>Syntax:</B><P>
 <P>

<B>reduce</B> <I>function sequence <TT>&amp;key</TT> key from-end start end initial-value</I> =&gt; <I>result</I><P>
 <P>
<P><B>Arguments and Values:</B><P>
 <P>
<I>function</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> that might be called with either zero or two <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A>. <P>
<I>sequence</I>---a <A REL=DEFINITION HREF="26_glo_p.htm#proper_sequence"><I>proper sequence</I></A>. <P>
 <I>key</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of one argument, or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>.  <P>
<I>from-end</I>---a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A>. The default is <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A>. <P>
  <I>start</I>, <I>end</I>---<A REL=DEFINITION HREF="26_glo_b.htm#bounding_index_designator"><I>bounding index designators</I></A> of <I>sequence</I>. The defaults for <I>start</I> and <I>end</I> are <TT>0</TT> and <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, respectively.   <P>
<I>initial-value</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>result</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<P><B>Description:</B><P>
 <P>
<A REL=DEFINITION HREF="#reduce"><B>reduce</B></A> uses a binary operation, <I>function</I>, to combine the <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>elements</I></A> of <I>sequence</I> <A REL=DEFINITION HREF="26_glo_b.htm#bounded"><I>bounded</I></A> by <I>start</I> and <I>end</I>. <P>
The <I>function</I> must accept as <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A> two <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>elements</I></A> of <I>sequence</I> or the results from combining those <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>elements</I></A>. The <I>function</I> must also be able to accept no arguments. <P>
 If <I>key</I> is supplied, it is used is used to extract the values to reduce. The <I>key</I> function is applied exactly once to each element of <I>sequence</I> in the order implied by the reduction order but not to the value of <I>initial-value</I>, if supplied.  The <I>key</I> function typically returns part of the <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A> of <I>sequence</I>. If <I>key</I> is not supplied or is <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, the <I>sequence</I> <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A> itself is used. <P>
The reduction is left-associative, unless <I>from-end</I> is <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A> in which case it is right-associative. <P>
If <I>initial-value</I> is supplied, it is logically placed before the subsequence (or after it if <I>from-end</I> is <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A>) and included in the reduction operation. <P>
In the normal case, the result of <A REL=DEFINITION HREF="#reduce"><B>reduce</B></A> is the combined result of <I>function</I>'s being applied to successive pairs of <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>elements</I></A> of <I>sequence</I>. If the subsequence contains exactly one <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A> and no <I>initial-value</I> is given, then that <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A> is returned and <I>function</I> is not called. If the subsequence is empty and an <I>initial-value</I> is given, then the <I>initial-value</I> is returned and <I>function</I> is not called. If the subsequence is empty and no <I>initial-value</I> is given, then the <I>function</I> is called with zero arguments, and <A REL=DEFINITION HREF="#reduce"><B>reduce</B></A> returns whatever <I>function</I> does. This is the only case where the <I>function</I> is called with other than two arguments. <P>
<P><B>Examples:</B><P>
 
<PRE>
 (reduce #'* '(1 2 3 4 5)) =&gt;  120
 (reduce #'append '((1) (2)) :initial-value '(i n i t)) =&gt;  (I N I T 1 2)
 (reduce #'append '((1) (2)) :from-end t                  
                             :initial-value '(i n i t)) =&gt;  (1 2 I N I T) 
 (reduce #'- '(1 2 3 4)) ==  (- (- (- 1 2) 3) 4) =&gt;  -8
 (reduce #'- '(1 2 3 4) :from-end t)    ;Alternating sum.
==  (- 1 (- 2 (- 3 4))) =&gt;  -2
 (reduce #'+ '()) =&gt;  0
 (reduce #'+ '(3)) =&gt;  3
 (reduce #'+ '(foo)) =&gt;  FOO
 (reduce #'list '(1 2 3 4)) =&gt;  (((1 2) 3) 4)
 (reduce #'list '(1 2 3 4) :from-end t) =&gt;  (1 (2 (3 4)))
 (reduce #'list '(1 2 3 4) :initial-value 'foo) =&gt;  ((((foo 1) 2) 3) 4)
 (reduce #'list '(1 2 3 4)
        :from-end t :initial-value 'foo) =&gt;  (1 (2 (3 (4 foo))))
</PRE>
</TT> <P>
<P><B>Side Effects:</B> None.
 <P>
<P><B>Affected By:</B> None.
 <P>
<P><B>Exceptional Situations:</B><P>
 <P>
Should be prepared to signal an error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_tp_err.htm#type-error"><B>type-error</B></A> if <I>sequence</I> is not a <A REL=DEFINITION HREF="26_glo_p.htm#proper_sequence"><I>proper sequence</I></A>. <P>
<P><B>See Also:</B><P>
 <P>
 <A REL=CHILD HREF="03_f.htm">Section 3.6 (Traversal Rules and Side Effects)</A>  <P>
<P><B>Notes:</B> None.
 <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issues</A>, <I>not part of the specification</I>, apply to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss240.htm">MAPPING-DESTRUCTIVE-INTERACTION:EXPLICITLY-VAGUE</A><LI> <A REL=CHILD HREF="../Issues/iss284.htm">RANGE-OF-START-AND-END-PARAMETERS:INTEGER-AND-INTEGER-NIL</A><LI> <A REL=CHILD HREF="../Issues/iss332.htm">SUBSEQ-OUT-OF-BOUNDS</A><LI> <A REL=CHILD HREF="../Issues/iss292.htm">REDUCE-ARGUMENT-EXTRACTION</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
