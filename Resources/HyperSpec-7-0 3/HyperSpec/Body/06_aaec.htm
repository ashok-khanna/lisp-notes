<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Section 6.1.1.5.3</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="06_aaeb.htm">
<LINK REL=UP HREF="06_aae.htm">
<LINK REL=NEXT HREF="06_aaed.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="06_aaeb.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="06_aae.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="06_aaed.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<H2>
6.1.1.5.3 Summary of Termination Test Clauses</H2> <P>
The <TT>for</TT> and <TT>as</TT> constructs provide a termination test that is determined by the iteration control clause. <P>
The <TT>repeat</TT> construct causes termination after a specified number of iterations. (It uses an internal variable to keep track of the number of iterations.) <P>
The <TT>while</TT> construct takes one <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>, a <I>test</I>, and terminates the iteration if the <I>test</I> evaluates to <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A>. A <TT>while</TT> clause is equivalent to the expression <TT>(if (not </TT><I>test</I><TT>) (loop-finish))</TT>. <P>
The <TT>until</TT> construct is the inverse of <TT>while</TT>; it terminates the iteration if the <I>test</I> evaluates to any <A REL=DEFINITION HREF="26_glo_n.htm#non-nil"><I>non-nil</I></A> value. An <TT>until</TT> clause is equivalent to the expression <TT>(if </TT><I>test</I><TT> (loop-finish))</TT>. <P>
The <TT>always</TT> construct takes one <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> and terminates the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> if the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> ever evaluates to <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A>; in this case, the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> returns <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. Otherwise, it provides a default return value of <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A>. <P>
The <TT>never</TT> construct takes one <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> and terminates the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> if the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> ever evaluates to <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A>; in this case, the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> returns <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. Otherwise, it provides a default return value of <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A>. <P>
The <TT>thereis</TT> construct takes one <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> and terminates the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> if the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> ever evaluates to a <A REL=DEFINITION HREF="26_glo_n.htm#non-nil"><I>non-nil</I></A> <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>; in this case, the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> returns that <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>.  Otherwise, it provides a default return value of <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>.  <P>
If multiple termination test clauses are specified, the <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> terminates if any are satisfied. <P>
  <P>
For more information, see <A REL=CHILD HREF="06_ad.htm">Section 6.1.4 (Termination Test Clauses)</A>. <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issue</A>, <I>not part of the specification</I>, applies to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss223.htm">LOOP-MISCELLANEOUS-REPAIRS:FIX</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
