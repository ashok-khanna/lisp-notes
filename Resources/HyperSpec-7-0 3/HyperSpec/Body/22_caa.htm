<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Section 22.3.1.1</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="22_ca.htm">
<LINK REL=UP HREF="22_ca.htm">
<LINK REL=NEXT HREF="22_cab.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="22_ca.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="22_ca.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="22_cab.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<H2>
22.3.1.1 Tilde C: Character</H2>  <P>
 The next <I>arg</I> should be a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>; it is printed according to the modifier flags. <P>
 <TT>~C</TT> prints the <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> as if by using <A REL=DEFINITION HREF="f_wr_cha.htm#write-char"><B>write-char</B></A> if it is a <A REL=DEFINITION HREF="26_glo_s.htm#simple"><I>simple</I></A> <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>. <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>Characters</I></A> that are not <A REL=DEFINITION HREF="26_glo_s.htm#simple"><I>simple</I></A> are not necessarily printed as if by <A REL=DEFINITION HREF="f_wr_cha.htm#write-char"><B>write-char</B></A>, but are displayed in an <A REL=DEFINITION HREF="26_glo_i.htm#implementation-defined"><I>implementation-defined</I></A>, abbreviated format. For example, <P>
<PRE>
 (format nil &quot;~C&quot; #\A) =&gt;  &quot;A&quot;
 (format nil &quot;~C&quot; #\Space) =&gt;  &quot; &quot;
</PRE>
</TT>  <P>
<TT>~:C</TT> is the same as <TT>~C</TT> for <A REL=DEFINITION HREF="26_glo_p.htm#printing"><I>printing</I></A> <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A>, but other <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> are ``spelled out.'' The intent is that this is a ``pretty'' format for printing characters. For <A REL=DEFINITION HREF="26_glo_s.htm#simple"><I>simple</I></A> <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> that are not <A REL=DEFINITION HREF="26_glo_p.htm#printing"><I>printing</I></A>, what is spelled out is the <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> of the <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> (see <A REL=DEFINITION HREF="f_char_n.htm#char-name"><B>char-name</B></A>). For <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> that are not <A REL=DEFINITION HREF="26_glo_s.htm#simple"><I>simple</I></A> and not <A REL=DEFINITION HREF="26_glo_p.htm#printing"><I>printing</I></A>, what is spelled out is <A REL=DEFINITION HREF="26_glo_i.htm#implementation-defined"><I>implementation-defined</I></A>. For example, <P>
<PRE>
 (format nil &quot;~:C&quot; #\A) =&gt;  &quot;A&quot;
 (format nil &quot;~:C&quot; #\Space) =&gt;  &quot;Space&quot;
;; This next example assumes an implementation-defined &quot;Control&quot; attribute.
 (format nil &quot;~:C&quot; #\Control-Space)
=&gt;  &quot;Control-Space&quot;
OR=&gt;  &quot;c-Space&quot;
</PRE>
</TT> <P>
<TT>~:@C</TT> prints what <TT>~:C</TT> would, and then if the <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> requires unusual shift keys on the keyboard to type it, this fact is mentioned. For example, <P>
 
<PRE>
 (format nil &quot;~:@C&quot; #\Control-Partial) =&gt;  &quot;Control-&lt;PARTIAL&gt; (Top-F)&quot;  
</PRE>
</TT> <P>
This is the format used for telling the user about a key he is expected to type, in prompts, for instance. The precise output may depend not only on the implementation, but on the particular I/O devices in use. <P>
<TT>~@C</TT> prints the <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> in a way that the <A REL=DEFINITION HREF="26_glo_l.htm#lisp_reader"><I>Lisp reader</I></A> can understand, using <TT>#\</TT> syntax. <P>
 <TT>~@C</TT> binds <A REL=DEFINITION HREF="v_pr_esc.htm#STprint-escapeST"><B>*print-escape*</B></A> to <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A>.  <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issues</A>, <I>not part of the specification</I>, apply to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss169.htm">FORMAT-PRETTY-PRINT:YES</A><LI> <A REL=CHILD HREF="../Issues/iss168.htm">FORMAT-OP-C</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
