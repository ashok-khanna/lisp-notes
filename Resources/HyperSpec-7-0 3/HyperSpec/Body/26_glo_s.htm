<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Glossary-Section S</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="26_glo_r.htm">
<LINK REL=UP HREF="26_a.htm">
<LINK REL=NEXT HREF="26_glo_t.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="26_glo_r.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="26_a.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="26_glo_t.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<B>S</B> <P>
<P><A NAME="safe"><B>safe</B></A> <I>adj.</I> 1. (of <A REL=DEFINITION HREF="26_glo_c.htm#code"><I>code</I></A>) processed in a <A REL=DEFINITION HREF="26_glo_l.htm#lexical_environment"><I>lexical environment</I></A> where the the highest <A REL=DEFINITION HREF="d_optimi.htm#safety"><B>safety</B></A> level (<TT>3</TT>) was in effect. See <A REL=DEFINITION HREF="d_optimi.htm#optimize"><B>optimize</B></A>. 2. (of a <A REL=DEFINITION HREF="26_glo_c.htm#call"><I>call</I></A>) a <A REL=DEFINITION HREF="#safe_call"><I>safe call</I></A>. <P>
<P><A NAME="safe_call"><B>safe call</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#call"><I>call</I></A> in which the <A REL=DEFINITION HREF="26_glo_c.htm#call"><I>call</I></A>, the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> being <I>called</I>, and the point of <A REL=DEFINITION HREF="26_glo_f.htm#functional_evaluation"><I>functional evaluation</I></A> are all <A REL=DEFINITION HREF="#safe"><I>safe</I></A>[1] <A REL=DEFINITION HREF="26_glo_c.htm#code"><I>code</I></A>. For more detailed information, see <A REL=CHILD HREF="03_eaa.htm">Section 3.5.1.1 (Safe and Unsafe Calls)</A>. <P>
<P><A NAME="same"><B>same</B></A> <I>adj.</I> 1. (of <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> under a specified <A REL=DEFINITION HREF="26_glo_p.htm#predicate"><I>predicate</I></A>) indistinguishable by that <A REL=DEFINITION HREF="26_glo_p.htm#predicate"><I>predicate</I></A>. ``The symbol <TT>car</TT>, the string <TT>&quot;car&quot;</TT>, and the string <TT>&quot;CAR&quot;</TT> are the <TT>same</TT> under <A REL=DEFINITION HREF="f_stgeq_.htm#string-equal"><B>string-equal</B></A>''. 2. (of <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> if no predicate is implied by context) indistinguishable by <A REL=DEFINITION HREF="f_eql.htm#eql"><B>eql</B></A>. Note that <A REL=DEFINITION HREF="f_eq.htm#eq"><B>eq</B></A> might be capable of distinguishing some <A REL=DEFINITION HREF="26_glo_n.htm#number"><I>numbers</I></A> and <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> which <A REL=DEFINITION HREF="f_eql.htm#eql"><B>eql</B></A> cannot distinguish, but the nature of such, if any, is <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent"><I>implementation-dependent</I></A>. Since <A REL=DEFINITION HREF="f_eq.htm#eq"><B>eq</B></A> is used only rarely in this specification, <A REL=DEFINITION HREF="f_eql.htm#eql"><B>eql</B></A> is the default predicate when none is mentioned explicitly. ``The conses returned by two successive calls to <A REL=DEFINITION HREF="f_cons.htm#cons"><B>cons</B></A> are never the same.'' 3. (of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>types</I></A>) having the same set of <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>elements</I></A>; that is, each <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> is a <A REL=DEFINITION HREF="#subtype"><I>subtype</I></A> of the others. ``The types specified by <TT>(integer 0 1)</TT>, <TT>(unsigned-byte 1)</TT>, and <TT>bit</TT> are the same.'' <P>
<P><A NAME="satisfy_the_test"><B>satisfy the test</B></A> <I>v.</I> (of an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> being considered by a <A REL=DEFINITION HREF="#sequence_function"><I>sequence function</I></A>) 1. (for a one <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> test) to be in a state such that the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> which is the <I>predicate</I> <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> to the <A REL=DEFINITION HREF="#sequence_function"><I>sequence function</I></A> returns <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A> when given a single <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> that is the result of calling the <A REL=DEFINITION HREF="#sequence_function"><I>sequence function</I></A>'s <I>key</I> <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> on the <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> being considered. See <A REL=CHILD HREF="17_bb.htm">Section 17.2.2 (Satisfying a One-Argument Test)</A>. 2. (for a two <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> test) to be in a state such that the two-place <A REL=DEFINITION HREF="26_glo_p.htm#predicate"><I>predicate</I></A> which is the <A REL=DEFINITION HREF="#sequence_function"><I>sequence function</I></A>'s <I>test</I> <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> returns <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A> when given a first <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> that is the <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> being considered, and when given a second <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> that is the result of calling the <A REL=DEFINITION HREF="#sequence_function"><I>sequence function</I></A>'s <I>key</I> <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> on an <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A> of the <A REL=DEFINITION HREF="#sequence_function"><I>sequence function</I></A>'s <I>sequence</I> <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> which is being tested for equality; or to be in a state such that the <I>test-not</I> <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> returns <A REL=DEFINITION HREF="26_glo_f.htm#false"><I>false</I></A> given the same <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A>. See <A REL=CHILD HREF="17_ba.htm">Section 17.2.1 (Satisfying a Two-Argument Test)</A>. <P>
<P><A NAME="scope"><B>scope</B></A> <I>n.</I> the structural or textual region of code in which <A REL=DEFINITION HREF="26_glo_r.htm#reference"><I>references</I></A> to an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>, a <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>binding</I></A>, an <A REL=DEFINITION HREF="26_glo_e.htm#exit_point"><I>exit point</I></A>, a <A REL=DEFINITION HREF="26_glo_t.htm#tag"><I>tag</I></A>, or an <A REL=DEFINITION HREF="26_glo_e.htm#environment"><I>environment</I></A> (usually by <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A>) can occur. <P>
<P><A NAME="script"><B>script</B></A> <I>n.</I> <I>ISO</I> one of possibly several sets that form an <A REL=DEFINITION HREF="26_glo_e.htm#exhaustive_partition"><I>exhaustive partition</I></A> of the type <A REL=DEFINITION HREF="t_ch.htm#character"><B>character</B></A>. See <A REL=CHILD HREF="13_aba.htm">Section 13.1.2.1 (Character Scripts)</A>. <P>
<P><A NAME="secondary_value"><B>secondary value</B></A> <I>n.</I> (of <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A> resulting from the <A REL=DEFINITION HREF="26_glo_e.htm#evaluation"><I>evaluation</I></A> of a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>) the second <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A>, if any, or else <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> if there are fewer than two <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A>. ``The secondary value returned by <A REL=DEFINITION HREF="f_floorc.htm#truncate"><B>truncate</B></A> is a remainder.'' <P>
<P><A NAME="section"><B>section</B></A> <I>n.</I> a partitioning of output by a <A REL=DEFINITION HREF="26_glo_c.htm#conditional_newline"><I>conditional newline</I></A> on a <A REL=DEFINITION HREF="26_glo_p.htm#pretty_printing_stream"><I>pretty printing stream</I></A>. See <A REL=CHILD HREF="22_baa.htm">Section 22.2.1.1 (Dynamic Control of the Arrangement of Output)</A>. <P>
<P><A NAME="self-evaluating_object"><B>self-evaluating object</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that is neither a <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> nor a <A REL=DEFINITION HREF="26_glo_c.htm#cons"><I>cons</I></A>. If a <A REL=DEFINITION HREF="#self-evaluating_object"><I>self-evaluating object</I></A> is <I>evaluated</I>, it <A REL=DEFINITION HREF="26_glo_y.htm#yield"><I>yields</I></A> itself as its only <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A>. ``Strings are self-evaluating objects.'' <P>
<P><A NAME="semi-standard"><B>semi-standard</B></A> <I>adj.</I> (of a language feature) not required to be implemented by any <A REL=DEFINITION HREF="26_glo_c.htm#conforming_implementation"><I>conforming implementation</I></A>, but nevertheless recommended as the canonical approach in situations where an <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> does plan to support such a feature. The presence of <A REL=DEFINITION HREF="#semi-standard"><I>semi-standard</I></A> aspects in the language is intended to lessen portability problems and reduce the risk of gratuitous divergence among <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A> that might stand in the way of future standardization. <P>
<P><A NAME="semicolon"><B>semicolon</B></A> <I>n.</I> the <A REL=DEFINITION HREF="#standard_character"><I>standard character</I></A> that is called ``semicolon'' (<TT>;</TT>). See <A REL=DEFINITION HREF="02_ac.htm#stdcharsthree">Figure 2-5</A>. <P>
<P><A NAME="sequence"><B>sequence</B></A> <I>n.</I> 1. an ordered collection of elements 2. a <A REL=DEFINITION HREF="26_glo_v.htm#vector"><I>vector</I></A> or a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>. <P>
<P><A NAME="sequence_function"><B>sequence function</B></A> <I>n.</I> one of the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>functions</I></A> in <A REL=DEFINITION HREF="17_a.htm#sequencefunctions">Figure 17-1</A>, or an <A REL=DEFINITION HREF="26_glo_i.htm#implementation-defined"><I>implementation-defined</I></A> <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> that operates on one or more <A REL=DEFINITION HREF="#sequence"><I>sequences</I></A>. and that is defined by the <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> to be a <A REL=DEFINITION HREF="#sequence_function"><I>sequence function</I></A>. <P>
<P><A NAME="sequential"><B>sequential</B></A> <I>adj.</I> <I>Trad.</I> (of <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>binding</I></A> or <I>assignment</I>) done in the style of <A REL=DEFINITION HREF="s_setq.htm#setq"><B>setq</B></A>, <A REL=DEFINITION HREF="s_let_l.htm#letST"><B>let*</B></A>, or <A REL=DEFINITION HREF="m_do_do.htm#doST"><B>do*</B></A>; that is, interleaving the evaluation of the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A> that produce <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A> with the <I>assignments</I> or <A REL=DEFINITION HREF="26_glo_b.htm#binding"><I>bindings</I></A> of the <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variables</I></A> (or <A REL=DEFINITION HREF="26_glo_p.htm#place"><I>places</I></A>). See <A REL=DEFINITION HREF="26_glo_p.htm#parallel"><I>parallel</I></A>. <P>
<P><A NAME="sequentially"><B>sequentially</B></A> <I>adv.</I> in a <A REL=DEFINITION HREF="#sequential"><I>sequential</I></A> way. <P>
<P><A NAME="serious_condition"><B>serious condition</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_seriou.htm#serious-condition"><B>serious-condition</B></A>, which represents a <A REL=DEFINITION HREF="#situation"><I>situation</I></A> that is generally sufficiently severe that entry into the <A REL=DEFINITION HREF="26_glo_d.htm#debugger"><I>debugger</I></A> should be expected if the <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> is <I>signaled</I> but not <I>handled</I>. <P>
<P><A NAME="session"><B>session</B></A> <I>n.</I> the conceptual aggregation of events in a <A REL=DEFINITION HREF="26_glo_l.htm#lisp_image"><I>Lisp image</I></A> from the time it is started to the time it is terminated. <P>
<P><A NAME="set"><B>set</B></A> <I>v.t.</I> <I>Trad.</I> (any <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> or a <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> that is the <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> of a <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_variable"><I>dynamic variable</I></A>) to <A REL=DEFINITION HREF="26_glo_a.htm#assign"><I>assign</I></A> the <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A>. <P>
 <P><A NAME="setf_expander"><B>setf expander</B></A> <I>n.</I> a function used by <A REL=DEFINITION HREF="m_setf_.htm#setf"><B>setf</B></A> to compute the <A REL=DEFINITION HREF="#setf_expansion"><I>setf expansion</I></A> of a <A REL=DEFINITION HREF="26_glo_p.htm#place"><I>place</I></A>.  <P>
 <P><A NAME="setf_expansion"><B>setf expansion</B></A> <I>n.</I> a set of five <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expressions</I></A>[1] that, taken together, describe how to store into a <A REL=DEFINITION HREF="26_glo_p.htm#place"><I>place</I></A> and which <A REL=DEFINITION HREF="#subform"><I>subforms</I></A> of the macro call associated with the <A REL=DEFINITION HREF="26_glo_p.htm#place"><I>place</I></A> are evaluated. See <A REL=CHILD HREF="05_aab.htm">Section 5.1.1.2 (Setf Expansions)</A>.  <P>
<P><A NAME="setf_function"><B>setf function</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> whose <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> is <TT>(setf <A REL=DEFINITION HREF="#symbol"></TT><I>symbol</I><TT></A>)</TT>. <P>
 <P><A NAME="setf_function_name"><B>setf function name</B></A> <I>n.</I> (of a <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> <I>S</I>) the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> <TT>(setf </TT><I>S</I><TT>)</TT>.  <P>
<P><A NAME="shadow"><B>shadow</B></A> <I>v.t.</I> 1. to override the meaning of. ``That binding of <TT>X</TT> shadows an outer one.'' 2. to hide the presence of. ``That <A REL=DEFINITION HREF="s_flet_.htm#macrolet"><B>macrolet</B></A> of <TT>F</TT> shadows the outer <A REL=DEFINITION HREF="s_flet_.htm#flet"><B>flet</B></A> of <TT>F</TT>.'' 3. to replace. ``That package shadows the symbol <TT>cl:car</TT> with its own symbol <TT>car</TT>.'' <P>
<P><A NAME="shadowing_symbol"><B>shadowing symbol</B></A> <I>n.</I> (in a <A REL=DEFINITION HREF="26_glo_p.htm#package"><I>package</I></A>) an <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A> of the <A REL=DEFINITION HREF="26_glo_p.htm#package"><I>package</I></A>'s <A REL=DEFINITION HREF="#shadowing_symbols_list"><I>shadowing symbols list</I></A>. <P>
<P><A NAME="shadowing_symbols_list"><B>shadowing symbols list</B></A> <I>n.</I> (of a <A REL=DEFINITION HREF="26_glo_p.htm#package"><I>package</I></A>) a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>, associated with the <A REL=DEFINITION HREF="26_glo_p.htm#package"><I>package</I></A>, of <A REL=DEFINITION HREF="#symbol"><I>symbols</I></A> that are to be exempted from `symbol conflict errors' detected when packages are <I>used</I>. See the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="f_pkg_sh.htm#package-shadowing-symbols"><B>package-shadowing-symbols</B></A>. <P>
<P><A NAME="shared_slot"><B>shared slot</B></A> <I>n.</I> (of a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A>) a <A REL=DEFINITION HREF="#slot"><I>slot</I></A> <A REL=DEFINITION HREF="26_glo_a.htm#accessible"><I>accessible</I></A> in more than one <A REL=DEFINITION HREF="26_glo_i.htm#instance"><I>instance</I></A> of a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A>; specifically, such a <A REL=DEFINITION HREF="#slot"><I>slot</I></A> is <A REL=DEFINITION HREF="26_glo_a.htm#accessible"><I>accessible</I></A> in all <A REL=DEFINITION HREF="26_glo_d.htm#direct_instance"><I>direct instances</I></A> of the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> and in those <A REL=DEFINITION HREF="26_glo_i.htm#indirect_instance"><I>indirect instances</I></A> whose <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> does not <A REL=DEFINITION HREF="#shadow"><I>shadow</I></A>[1] the <A REL=DEFINITION HREF="#slot"><I>slot</I></A>. <P>
<P><A NAME="sharpsign"><B>sharpsign</B></A> <I>n.</I> the <A REL=DEFINITION HREF="#standard_character"><I>standard character</I></A> that is variously called ``number sign,'' ``sharp,'' or ``sharp sign'' (<TT>#</TT>). See <A REL=DEFINITION HREF="02_ac.htm#stdcharsthree">Figure 2-5</A>. <P>
<P><A NAME="short_float"><B>short float</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_short_.htm#short-float"><B>short-float</B></A>. <P>
<P><A NAME="sign"><B>sign</B></A> <I>n.</I> one of the <A REL=DEFINITION HREF="#standard_character"><I>standard characters</I></A> ``<TT>+</TT>'' or ``<TT>-</TT>''. <P>
<P><A NAME="signal"><B>signal</B></A> <I>v.</I> to announce, using a standard protocol, that a particular situation, represented by a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A>, has been detected. See <A REL=CHILD HREF="09_a.htm">Section 9.1 (Condition System Concepts)</A>. <P>
<P><A NAME="signature"><B>signature</B></A> <I>n.</I> (of a <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A>) a description of the <A REL=DEFINITION HREF="26_glo_p.htm#parameter"><I>parameters</I></A> and <A REL=DEFINITION HREF="26_glo_p.htm#parameter_specializer"><I>parameter specializers</I></A> for the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> which determines the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A>'s applicability for a given set of required <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A>, and which also describes the <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> conventions for its other, non-required <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A>. <P>
<P><A NAME="similar"><B>similar</B></A> <I>adj.</I> (of two <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A>) defined to be equivalent under the <A REL=DEFINITION HREF="#similarity"><I>similarity</I></A> relationship. <P>
<P><A NAME="similarity"><B>similarity</B></A> <I>n.</I> a two-place conceptual equivalence predicate, which is independent of the <A REL=DEFINITION HREF="26_glo_l.htm#lisp_image"><I>Lisp image</I></A> so that two <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> in different <A REL=DEFINITION HREF="26_glo_l.htm#lisp_image"><I>Lisp images</I></A> can be understood to be equivalent under this predicate. See <A REL=CHILD HREF="03_bd.htm">Section 3.2.4 (Literal Objects in Compiled Files)</A>. <P>
<P><A NAME="simple"><B>simple</B></A> <I>adj.</I> 1. (of an <A REL=DEFINITION HREF="26_glo_a.htm#array"><I>array</I></A>) being of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_smp_ar.htm#simple-array"><B>simple-array</B></A>. 2. (of a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>) having no <A REL=DEFINITION HREF="26_glo_i.htm#implementation-defined"><I>implementation-defined</I></A> <A REL=DEFINITION HREF="26_glo_a.htm#attribute"><I>attributes</I></A>, or else having <A REL=DEFINITION HREF="26_glo_i.htm#implementation-defined"><I>implementation-defined</I></A> <A REL=DEFINITION HREF="26_glo_a.htm#attribute"><I>attributes</I></A> each of which has the <A REL=DEFINITION HREF="26_glo_n.htm#null"><I>null</I></A> value for that <A REL=DEFINITION HREF="26_glo_a.htm#attribute"><I>attribute</I></A>. <P>
<P><A NAME="simple_array"><B>simple array</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_a.htm#array"><I>array</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_smp_ar.htm#simple-array"><B>simple-array</B></A>. <P>
<P><A NAME="simple_bit_array"><B>simple bit array</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_b.htm#bit_array"><I>bit array</I></A> that is a <A REL=DEFINITION HREF="#simple_array"><I>simple array</I></A>; that is, an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <TT>(simple-array bit)</TT>. <P>
<P><A NAME="simple_bit_vector"><B>simple bit vector</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_b.htm#bit_vector"><I>bit vector</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_smp_bt.htm#simple-bit-vector"><B>simple-bit-vector</B></A>. <P>
<P><A NAME="simple_condition"><B>simple condition</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_smp_cn.htm#simple-condition"><B>simple-condition</B></A>. <P>
<P><A NAME="simple_general_vector"><B>simple general vector</B></A> <I>n.</I> a <A REL=DEFINITION HREF="#simple_vector"><I>simple vector</I></A>. <P>
<P><A NAME="simple_string"><B>simple string</B></A> <I>n.</I> a <A REL=DEFINITION HREF="#string"><I>string</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_smp_st.htm#simple-string"><B>simple-string</B></A>. <P>
<P><A NAME="simple_vector"><B>simple vector</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_v.htm#vector"><I>vector</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_smp_ve.htm#simple-vector"><B>simple-vector</B></A>, sometimes called a ``<A REL=DEFINITION HREF="#simple_general_vector"><I>simple general vector</I></A>.'' Not all <A REL=DEFINITION HREF="26_glo_v.htm#vector"><I>vectors</I></A> that are <A REL=DEFINITION HREF="#simple"><I>simple</I></A> are <A REL=DEFINITION HREF="#simple_vector"><I>simple vectors</I></A>---only those that have <A REL=DEFINITION HREF="26_glo_e.htm#element_type"><I>element type</I></A> <A REL=DEFINITION HREF="t_t.htm#t"><B>t</B></A>. <P>
<P><A NAME="single_escape"><B>single escape</B></A> <I>n.</I>, <I>adj.</I> 1. <I>n.</I> the <A REL=DEFINITION HREF="#syntax_type"><I>syntax type</I></A> of a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> that indicates that the next <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> is to be treated as an <A REL=DEFINITION HREF="26_glo_a.htm#alphabetic"><I>alphabetic</I></A>[2] <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> with its <A REL=DEFINITION HREF="26_glo_c.htm#case"><I>case</I></A> preserved. For details, see <A REL=CHILD HREF="02_adf.htm">Section 2.1.4.6 (Single Escape Character)</A>. 2. <I>adj.</I> (of a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>) having the <A REL=DEFINITION HREF="#single_escape"><I>single escape</I></A> <A REL=DEFINITION HREF="#syntax_type"><I>syntax type</I></A>. 3. <I>n.</I> a <A REL=DEFINITION HREF="#single_escape"><I>single escape</I></A>[2] <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>. (In the <A REL=DEFINITION HREF="#standard_readtable"><I>standard readtable</I></A>, <A REL=DEFINITION HREF="#slash"><I>slash</I></A> is the only <A REL=DEFINITION HREF="#single_escape"><I>single escape</I></A>.) <P>
<P><A NAME="single_float"><B>single float</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_short_.htm#single-float"><B>single-float</B></A>. <P>
<P><A NAME="single-quote"><B>single-quote</B></A> <I>n.</I> the <A REL=DEFINITION HREF="#standard_character"><I>standard character</I></A> that is variously called ``apostrophe,'' ``acute accent,'' ``quote,'' or ``single quote'' (<TT>'</TT>). See <A REL=DEFINITION HREF="02_ac.htm#stdcharsthree">Figure 2-5</A>. <P>
<P><A NAME="singleton"><B>singleton</B></A> <I>adj.</I> (of a <A REL=DEFINITION HREF="#sequence"><I>sequence</I></A>) having only one <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A>. ``<TT>(list 'hello)</TT> returns a singleton list.'' <P>
<P><A NAME="situation"><B>situation</B></A> <I>n.</I> the <A REL=DEFINITION HREF="26_glo_e.htm#evaluation"><I>evaluation</I></A> of a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> in a specific <A REL=DEFINITION HREF="26_glo_e.htm#environment"><I>environment</I></A>. <P>
<P><A NAME="slash"><B>slash</B></A> <I>n.</I> the <A REL=DEFINITION HREF="#standard_character"><I>standard character</I></A> that is variously called ``solidus'' or ``slash'' (<TT>/</TT>). See <A REL=DEFINITION HREF="02_ac.htm#stdcharsthree">Figure 2-5</A>. <P>
<P><A NAME="slot"><B>slot</B></A> <I>n.</I> a component of an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that can store a <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A>. <P>
<P><A NAME="slot_specifier"><B>slot specifier</B></A> <I>n.</I> a representation of a <A REL=DEFINITION HREF="#slot"><I>slot</I></A> that includes the <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> of the <A REL=DEFINITION HREF="#slot"><I>slot</I></A> and zero or more <A REL=DEFINITION HREF="#slot"><I>slot</I></A> options. A <A REL=DEFINITION HREF="#slot"><I>slot</I></A> option pertains only to a single <A REL=DEFINITION HREF="#slot"><I>slot</I></A>. <P>
<P><A NAME="source_code"><B>source code</B></A> <I>n.</I> <A REL=DEFINITION HREF="26_glo_c.htm#code"><I>code</I></A> representing <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> suitable for <A REL=DEFINITION HREF="26_glo_e.htm#evaluation"><I>evaluation</I></A> (e.g., <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> created by <A REL=DEFINITION HREF="f_rd_rd.htm#read"><B>read</B></A>, by <A REL=DEFINITION HREF="26_glo_m.htm#macro_expansion"><I>macro expansion</I></A>,  or by <A REL=DEFINITION HREF="26_glo_c.htm#compiler_macro_expansion"><I>compiler macro expansion</I></A>).  <P>
<P><A NAME="source_file"><B>source file</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_f.htm#file"><I>file</I></A> which contains a textual representation of <A REL=DEFINITION HREF="#source_code"><I>source code</I></A>, that can be edited, <I>loaded</I>, or <I>compiled</I>. <P>
<P><A NAME="space"><B>space</B></A> <I>n.</I> the <A REL=DEFINITION HREF="#standard_character"><I>standard character</I></A> &lt;Space&gt;, notated for the <A REL=DEFINITION HREF="26_glo_l.htm#lisp_reader"><I>Lisp reader</I></A> as <TT>#\Space</TT>. <P>
<P><A NAME="special_form"><B>special form</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>, other than a <A REL=DEFINITION HREF="26_glo_m.htm#macro_form"><I>macro form</I></A>, which is a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> with special syntax or special <A REL=DEFINITION HREF="26_glo_e.htm#evaluation"><I>evaluation</I></A> rules or both, possibly manipulating the <A REL=DEFINITION HREF="26_glo_e.htm#evaluation"><I>evaluation</I></A> <A REL=DEFINITION HREF="26_glo_e.htm#environment"><I>environment</I></A> or control flow or both. The first element of a <A REL=DEFINITION HREF="#special_form"><I>special form</I></A> is a <A REL=DEFINITION HREF="#special_operator"><I>special operator</I></A>. <P>
<P><A NAME="special_operator"><B>special operator</B></A> <I>n.</I> one of a fixed set of <A REL=DEFINITION HREF="#symbol"><I>symbols</I></A>, enumerated in <A REL=DEFINITION HREF="03_ababa.htm#clspecialops">Figure 3-2</A>, that may appear in the <A REL=DEFINITION HREF="26_glo_c.htm#car"><I>car</I></A> of a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> in order to identify the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> as a <A REL=DEFINITION HREF="#special_form"><I>special form</I></A>. <P>
<P><A NAME="special_variable"><B>special variable</B></A> <I>n.</I> <I>Trad.</I> a <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_variable"><I>dynamic variable</I></A>. <P>
<P><A NAME="specialize"><B>specialize</B></A> <I>v.t.</I> (a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>) to define a <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> for the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>, or in other words, to refine the behavior of the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> by giving it a specific meaning for a particular set of <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>classes</I></A> or <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A>. <P>
<P><A NAME="specialized"><B>specialized</B></A> <I>adj.</I> 1. (of a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>) having <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> which <A REL=DEFINITION HREF="#specialize"><I>specialize</I></A> the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>. 2. (of an <A REL=DEFINITION HREF="26_glo_a.htm#array"><I>array</I></A>) having an <A REL=DEFINITION HREF="26_glo_a.htm#actual_array_element_type"><I>actual array element type</I></A> that is a <A REL=DEFINITION HREF="26_glo_p.htm#proper_subtype"><I>proper subtype</I></A> of the <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_t.htm#t"><B>t</B></A>; see <A REL=CHILD HREF="15_aa.htm">Section 15.1.1 (Array Elements)</A>. ``<TT>(make-array 5 :element-type 'bit)</TT> makes an array of length five that is specialized for bits.'' <P>
<P><A NAME="specialized_lambda_list"><B>specialized lambda list</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_e.htm#extended_lambda_list"><I>extended lambda list</I></A> used in <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A> that <A REL=DEFINITION HREF="26_glo_e.htm#establish"><I>establish</I></A> <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> definitions, such as <A REL=DEFINITION HREF="m_defmet.htm#defmethod"><B>defmethod</B></A>. See <A REL=CHILD HREF="03_dc.htm">Section 3.4.3 (Specialized Lambda Lists)</A>. <P>
<P><A NAME="spreadable_argument_list_designator"><B>spreadable argument list designator</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A>; that is, an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that denotes a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> and that is a <I>non-null</I> <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> L1 of length n, whose last element is a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> L2 of length m (denoting a list L3 of length m+n-1 whose <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>elements</I></A> are L1i for i &lt; n-1 followed by L2j for j &lt; m). ``The list (1 2 (3 4 5)) is a spreadable argument list designator for the list (1 2 3 4 5).'' <P>
<P><A NAME="stack_allocate"><B>stack allocate</B></A> <I>v.t.</I> <I>Trad.</I> to allocate in a non-permanent way, such as on a stack. Stack-allocation is an optimization technique used in some <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A> for allocating certain kinds of <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> that have <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_extent"><I>dynamic extent</I></A>. Such <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> are allocated on the stack rather than in the heap so that their storage can be freed as part of unwinding the stack rather than taking up space in the heap until the next garbage collection. What <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>types</I></A> (if any) can have <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_extent"><I>dynamic extent</I></A> can vary from <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> to <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A>. No <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> is ever required to perform stack-allocation. <P>
<P><A NAME="stack-allocated"><B>stack-allocated</B></A> <I>adj.</I> <I>Trad.</I> having been <I>stack allocated</I>. <P>
<P><A NAME="standard_character"><B>standard character</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_std_ch.htm#standard-char"><B>standard-char</B></A>, which is one of a fixed set of 96 such <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> required to be present in all <A REL=DEFINITION HREF="26_glo_c.htm#conforming_implementation"><I>conforming implementations</I></A>. See <A REL=CHILD HREF="02_ac.htm">Section 2.1.3 (Standard Characters)</A>. <P>
<P><A NAME="standard_class"><B>standard class</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> that is a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_instance"><I>generalized instance</I></A> of <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> <A REL=DEFINITION HREF="t_std_cl.htm#standard-class"><B>standard-class</B></A>. <P>
<P><A NAME="standard_generic_function"><B>standard generic function</B></A> a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_std_ge.htm#standard-generic-function"><B>standard-generic-function</B></A>. <P>
<P><A NAME="standard_input"><B>standard input</B></A> <I>n.</I> the <A REL=DEFINITION HREF="26_glo_i.htm#input"><I>input</I></A> <A REL=DEFINITION HREF="#stream"><I>stream</I></A> which is the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of the <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_variable"><I>dynamic variable</I></A> <A REL=DEFINITION HREF="v_debug_.htm#STstandard-inputST"><B>*standard-input*</B></A>. <P>
<P><A NAME="standard_method_combination"><B>standard method combination</B></A> <I>n.</I> the <A REL=DEFINITION HREF="26_glo_m.htm#method_combination"><I>method combination</I></A> named <B>standard</B>. <P>
<P><A NAME="standard_object"><B>standard object</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that is a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_instance"><I>generalized instance</I></A> of <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> <A REL=DEFINITION HREF="t_std_ob.htm#standard-object"><B>standard-object</B></A>. <P>
<P><A NAME="standard_output"><B>standard output</B></A> <I>n.</I> the <A REL=DEFINITION HREF="26_glo_o.htm#output"><I>output</I></A> <A REL=DEFINITION HREF="#stream"><I>stream</I></A> which is the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of the <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_variable"><I>dynamic variable</I></A> <A REL=DEFINITION HREF="v_debug_.htm#STstandard-outputST"><B>*standard-output*</B></A>. <P>
 <P><A NAME="standard_pprint_dispatch_table"><B>standard pprint dispatch table</B></A> <I>n.</I> A <A REL=DEFINITION HREF="26_glo_p.htm#pprint_dispatch_table"><I>pprint dispatch table</I></A> that is <A REL=DEFINITION HREF="26_glo_d.htm#different"><I>different</I></A> from the <A REL=DEFINITION HREF="26_glo_i.htm#initial_pprint_dispatch_table"><I>initial pprint dispatch table</I></A>, that implements <I>pretty printing</I> as described in this specification, and that, unlike other <A REL=DEFINITION HREF="26_glo_p.htm#pprint_dispatch_table"><I>pprint dispatch tables</I></A>, must never be modified by any program. (Although the definite reference ``the <A REL=DEFINITION HREF="#standard_pprint_dispatch_table"><I>standard pprint dispatch table</I></A>'' is generally used within this document, it is actually <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent"><I>implementation-dependent</I></A> whether a single <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> fills the role of the <A REL=DEFINITION HREF="#standard_pprint_dispatch_table"><I>standard pprint dispatch table</I></A>, or whether there might be multiple such objects, any one of which could be used on any given occasion where ``the <A REL=DEFINITION HREF="#standard_pprint_dispatch_table"><I>standard pprint dispatch table</I></A>'' is called for. As such, this phrase should be seen as an indefinite reference in all cases except for anaphoric references.)  <P>
 <P><A NAME="standard_readtable"><B>standard readtable</B></A> <I>n.</I> A <A REL=DEFINITION HREF="26_glo_r.htm#readtable"><I>readtable</I></A> that is <A REL=DEFINITION HREF="26_glo_d.htm#different"><I>different</I></A> from the <A REL=DEFINITION HREF="26_glo_i.htm#initial_readtable"><I>initial readtable</I></A>, that implements the <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A> syntax defined in this specification, and that, unlike other <A REL=DEFINITION HREF="26_glo_r.htm#readtable"><I>readtables</I></A>, must never be modified by any program. (Although the definite reference ``the <A REL=DEFINITION HREF="#standard_readtable"><I>standard readtable</I></A>'' is generally used within this document, it is actually <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent"><I>implementation-dependent</I></A> whether a single <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> fills the role of the <A REL=DEFINITION HREF="#standard_readtable"><I>standard readtable</I></A>, or whether there might be multiple such objects, any one of which could be used on any given occasion where ``the <A REL=DEFINITION HREF="#standard_readtable"><I>standard readtable</I></A>'' is called for. As such, this phrase should be seen as an indefinite reference in all cases except for anaphoric references.)  <P>
<P><A NAME="standard_syntax"><B>standard syntax</B></A> <I>n.</I> the syntax represented by the <A REL=DEFINITION HREF="#standard_readtable"><I>standard readtable</I></A> and used as a reference syntax throughout this document. See <A REL=CHILD HREF="02_a.htm">Section 2.1 (Character Syntax)</A>. <P>
<P><A NAME="standardized"><B>standardized</B></A> <I>adj.</I> (of a <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A>, <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>, or definition) having been defined by Common Lisp. ``All standardized variables that are required to hold bidirectional streams have ``<TT>-io*</TT>'' in their name.'' <P>
<P><A NAME="startup_environment"><B>startup environment</B></A> <I>n.</I> the <A REL=DEFINITION HREF="26_glo_g.htm#global_environment"><I>global environment</I></A> of the running <A REL=DEFINITION HREF="26_glo_l.htm#lisp_image"><I>Lisp image</I></A> from which the <A REL=DEFINITION HREF="26_glo_c.htm#compiler"><I>compiler</I></A> was invoked. <P>
<P><A NAME="step"><B>step</B></A> <I>v.t.</I>, <I>n.</I> 1. <I>v.t.</I> (an iteration <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A>) to <A REL=DEFINITION HREF="26_glo_a.htm#assign"><I>assign</I></A> the <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> a new <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> at the end of an iteration, in preparation for a new iteration. 2. <I>n.</I> the <A REL=DEFINITION HREF="26_glo_c.htm#code"><I>code</I></A> that identifies how the next value in an iteration is to be computed. 3. <I>v.t.</I> (<A REL=DEFINITION HREF="26_glo_c.htm#code"><I>code</I></A>) to specially execute the <A REL=DEFINITION HREF="26_glo_c.htm#code"><I>code</I></A>, pausing at intervals to allow user confirmation or intervention, usually for debugging. <P>
<P><A NAME="stream"><B>stream</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that can be used with an input or output function to identify an appropriate source or sink of <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> or <A REL=DEFINITION HREF="26_glo_b.htm#byte"><I>bytes</I></A> for that operation. <P>
  <P><A NAME="stream_associated_with_a_file"><B>stream associated with a file</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_f.htm#file_stream"><I>file stream</I></A>, or a <A REL=DEFINITION HREF="#synonym_stream"><I>synonym stream</I></A> the <A REL=DEFINITION HREF="26_glo_t.htm#target"><I>target</I></A> of which is a <A REL=DEFINITION HREF="#stream_associated_with_a_file"><I>stream associated with a file</I></A>. Such a <A REL=DEFINITION HREF="#stream"><I>stream</I></A> cannot be created with <A REL=DEFINITION HREF="f_mk_two.htm#make-two-way-stream"><B>make-two-way-stream</B></A>, <A REL=DEFINITION HREF="f_mk_ech.htm#make-echo-stream"><B>make-echo-stream</B></A>, <A REL=DEFINITION HREF="f_mk_bro.htm#make-broadcast-stream"><B>make-broadcast-stream</B></A>, <A REL=DEFINITION HREF="f_mk_con.htm#make-concatenated-stream"><B>make-concatenated-stream</B></A>, <A REL=DEFINITION HREF="f_mk_s_1.htm#make-string-input-stream"><B>make-string-input-stream</B></A>, or <A REL=DEFINITION HREF="f_mk_s_2.htm#make-string-output-stream"><B>make-string-output-stream</B></A>.   <P>
<P><A NAME="stream_designator"><B>stream designator</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="#stream"><I>stream</I></A>; that is, an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that denotes a <A REL=DEFINITION HREF="#stream"><I>stream</I></A> and that is one of: <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A> (denoting the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of <A REL=DEFINITION HREF="v_termin.htm#STterminal-ioST"><B>*terminal-io*</B></A>), <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> (denoting the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of <A REL=DEFINITION HREF="v_debug_.htm#STstandard-inputST"><B>*standard-input*</B></A> for <A REL=DEFINITION HREF="26_glo_i.htm#input"><I>input</I></A> <A REL=DEFINITION HREF="#stream_designator"><I>stream designators</I></A> or denoting the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of <A REL=DEFINITION HREF="v_debug_.htm#STstandard-outputST"><B>*standard-output*</B></A> for <A REL=DEFINITION HREF="26_glo_o.htm#output"><I>output</I></A> <A REL=DEFINITION HREF="#stream_designator"><I>stream designators</I></A>), or a <A REL=DEFINITION HREF="#stream"><I>stream</I></A> (denoting itself). <P>
<P><A NAME="stream_element_type"><B>stream element type</B></A> <I>n.</I> (of a <A REL=DEFINITION HREF="#stream"><I>stream</I></A>) the <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> of data for which the <A REL=DEFINITION HREF="#stream"><I>stream</I></A> is specialized. <P>
<P><A NAME="stream_variable"><B>stream variable</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_v.htm#variable"><I>variable</I></A> whose <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> must be a <A REL=DEFINITION HREF="#stream"><I>stream</I></A>. <P>
<P><A NAME="stream_variable_designator"><B>stream variable designator</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="#stream_variable"><I>stream variable</I></A>; that is, a <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> that denotes a <A REL=DEFINITION HREF="#stream_variable"><I>stream variable</I></A> and that is one of: <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A> (denoting <A REL=DEFINITION HREF="v_termin.htm#STterminal-ioST"><B>*terminal-io*</B></A>), <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> (denoting <A REL=DEFINITION HREF="v_debug_.htm#STstandard-inputST"><B>*standard-input*</B></A> for <A REL=DEFINITION HREF="26_glo_i.htm#input"><I>input</I></A> <A REL=DEFINITION HREF="#stream_variable_designator"><I>stream variable designators</I></A> or denoting <A REL=DEFINITION HREF="v_debug_.htm#STstandard-outputST"><B>*standard-output*</B></A> for <A REL=DEFINITION HREF="26_glo_o.htm#output"><I>output</I></A> <A REL=DEFINITION HREF="#stream_variable_designator"><I>stream variable designators</I></A>), or some other <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> (denoting itself). <P>
<P><A NAME="string"><B>string</B></A> <I>n.</I> a specialized <A REL=DEFINITION HREF="26_glo_v.htm#vector"><I>vector</I></A> that is of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_string.htm#string"><B>string</B></A>, and whose elements are of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_ch.htm#character"><B>character</B></A> or a <A REL=DEFINITION HREF="#subtype"><I>subtype</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_ch.htm#character"><B>character</B></A>. <P>
<P><A NAME="string_designator"><B>string designator</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="#string"><I>string</I></A>; that is, an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that denotes a <A REL=DEFINITION HREF="#string"><I>string</I></A> and that is one of: a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> (denoting a <A REL=DEFINITION HREF="#singleton"><I>singleton</I></A> <A REL=DEFINITION HREF="#string"><I>string</I></A> that has the <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> as its only <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A>), a <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> (denoting the <A REL=DEFINITION HREF="#string"><I>string</I></A> that is its <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A>), or a <A REL=DEFINITION HREF="#string"><I>string</I></A> (denoting itself).  The intent is that this term be consistent with the behavior of <A REL=DEFINITION HREF="f_string.htm#string"><B>string</B></A>; <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A> that extend <A REL=DEFINITION HREF="f_string.htm#string"><B>string</B></A> must extend the meaning of this term in a compatible way.  <P>
<P><A NAME="string_equal"><B>string equal</B></A> <I>adj.</I> the <A REL=DEFINITION HREF="#same"><I>same</I></A> under <A REL=DEFINITION HREF="f_stgeq_.htm#string-equal"><B>string-equal</B></A>. <P>
<P><A NAME="string_stream"><B>string stream</B></A> <I>n.</I> a <A REL=DEFINITION HREF="#stream"><I>stream</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_stg_st.htm#string-stream"><B>string-stream</B></A>. <P>
<P><A NAME="structure"><B>structure</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_stu_ob.htm#structure-object"><B>structure-object</B></A>. <P>
<P><A NAME="structure_class"><B>structure class</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> that is a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_instance"><I>generalized instance</I></A> of <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> <A REL=DEFINITION HREF="t_stu_cl.htm#structure-class"><B>structure-class</B></A>. <P>
<P><A NAME="structure_name"><B>structure name</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> defined with <A REL=DEFINITION HREF="m_defstr.htm#defstruct"><B>defstruct</B></A>. Usually, such a <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> is also a <A REL=DEFINITION HREF="#structure_class"><I>structure class</I></A>, but there may be <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent"><I>implementation-dependent</I></A> situations in which this is not so, if the <TT>:type</TT> option to <A REL=DEFINITION HREF="m_defstr.htm#defstruct"><B>defstruct</B></A> is used. <P>
<P><A NAME="style_warning"><B>style warning</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_style_.htm#style-warning"><B>style-warning</B></A>. <P>
<P><A NAME="subclass"><B>subclass</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> that <A REL=DEFINITION HREF="26_glo_i.htm#inherit"><I>inherits</I></A> from another <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A>, called a <A REL=DEFINITION HREF="#superclass"><I>superclass</I></A>. (No <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> is a <A REL=DEFINITION HREF="#subclass"><I>subclass</I></A> of itself.) <P>
<P><A NAME="subexpression"><B>subexpression</B></A> <I>n.</I> (of an <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A>) an <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A> that is contained within the <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A>. (In fact, the state of being a <A REL=DEFINITION HREF="#subexpression"><I>subexpression</I></A> is not an attribute of the <A REL=DEFINITION HREF="#subexpression"><I>subexpression</I></A>, but really an attribute of the containing <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A> since the <A REL=DEFINITION HREF="#same"><I>same</I></A> <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> can at once be a <A REL=DEFINITION HREF="#subexpression"><I>subexpression</I></A> in one context, and not in another.) <P>
<P><A NAME="subform"><B>subform</B></A> <I>n.</I> (of a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>) an <A REL=DEFINITION HREF="26_glo_e.htm#expression"><I>expression</I></A> that is a <A REL=DEFINITION HREF="#subexpression"><I>subexpression</I></A> of the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>, and which by virtue of its position in that <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> is also a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. ``<TT>(f x)</TT> and <TT>x</TT>, but not <TT>exit</TT>, are subforms of <TT>(return-from exit (f x))</TT>.'' <P>
<P><A NAME="subrepertoire"><B>subrepertoire</B></A> <I>n.</I> a subset of a <A REL=DEFINITION HREF="26_glo_r.htm#repertoire"><I>repertoire</I></A>. <P>
<P><A NAME="subtype"><B>subtype</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> whose membership is the same as or a proper subset of the membership of another <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A>, called a <A REL=DEFINITION HREF="#supertype"><I>supertype</I></A>. (Every <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> is a <A REL=DEFINITION HREF="#subtype"><I>subtype</I></A> of itself.) <P>
<P><A NAME="superclass"><B>superclass</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> from which another <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> (called a <A REL=DEFINITION HREF="#subclass"><I>subclass</I></A>) <A REL=DEFINITION HREF="26_glo_i.htm#inherit"><I>inherits</I></A>. (No <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> is a <A REL=DEFINITION HREF="#superclass"><I>superclass</I></A> of itself.) See <A REL=DEFINITION HREF="#subclass"><I>subclass</I></A>. <P>
<P><A NAME="supertype"><B>supertype</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> whose membership is the same as or a proper superset of the membership of another <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A>, called a <A REL=DEFINITION HREF="#subtype"><I>subtype</I></A>. (Every <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> is a <A REL=DEFINITION HREF="#supertype"><I>supertype</I></A> of itself.) See <A REL=DEFINITION HREF="#subtype"><I>subtype</I></A>. <P>
<P><A NAME="supplied-p_parameter"><B>supplied-p parameter</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_p.htm#parameter"><I>parameter</I></A> which recieves its <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A> value implicitly due to the presence or absence of an <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> corresponding to another <A REL=DEFINITION HREF="26_glo_p.htm#parameter"><I>parameter</I></A> (such as an <A REL=DEFINITION HREF="26_glo_o.htm#optional_parameter"><I>optional parameter</I></A> or a <A REL=DEFINITION HREF="26_glo_r.htm#rest_parameter"><I>rest parameter</I></A>). See <A REL=CHILD HREF="03_da.htm">Section 3.4.1 (Ordinary Lambda Lists)</A>. <P>
<P><A NAME="symbol"><B>symbol</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_symbol.htm#symbol"><B>symbol</B></A>. <P>
<P><A NAME="symbol_macro"><B>symbol macro</B></A> <I>n.</I> a <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> that stands for another <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. See the <A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macro</I></A> <A REL=DEFINITION HREF="s_symbol.htm#symbol-macrolet"><B>symbol-macrolet</B></A>. <P>
<P><A NAME="synonym_stream"><B>synonym stream</B></A> <I>n.</I> 1. a <A REL=DEFINITION HREF="#stream"><I>stream</I></A> of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_syn_st.htm#synonym-stream"><B>synonym-stream</B></A>, which is consequently a <A REL=DEFINITION HREF="#stream"><I>stream</I></A> that is an alias for another <A REL=DEFINITION HREF="#stream"><I>stream</I></A>, which is the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of a <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_variable"><I>dynamic variable</I></A> whose <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> is the <A REL=DEFINITION HREF="#synonym_stream_symbol"><I>synonym stream symbol</I></A> of the <A REL=DEFINITION HREF="#synonym_stream"><I>synonym stream</I></A>. See the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="f_mk_syn.htm#make-synonym-stream"><B>make-synonym-stream</B></A>. 2. (to a <A REL=DEFINITION HREF="#stream"><I>stream</I></A>) a <A REL=DEFINITION HREF="#synonym_stream"><I>synonym stream</I></A> which has the <A REL=DEFINITION HREF="#stream"><I>stream</I></A> as the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of its <A REL=DEFINITION HREF="#synonym_stream_symbol"><I>synonym stream symbol</I></A>. 3. (to a <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A>) a <A REL=DEFINITION HREF="#synonym_stream"><I>synonym stream</I></A> which has the <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> as its <A REL=DEFINITION HREF="#synonym_stream_symbol"><I>synonym stream symbol</I></A>. <P>
<P><A NAME="synonym_stream_symbol"><B>synonym stream symbol</B></A> <I>n.</I> (of a <A REL=DEFINITION HREF="#synonym_stream"><I>synonym stream</I></A>) the <A REL=DEFINITION HREF="#symbol"><I>symbol</I></A> which names the <A REL=DEFINITION HREF="26_glo_d.htm#dynamic_variable"><I>dynamic variable</I></A> which has as its <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> another <A REL=DEFINITION HREF="#stream"><I>stream</I></A> for which the <A REL=DEFINITION HREF="#synonym_stream"><I>synonym stream</I></A> is an alias. <P>
<P><A NAME="syntax_type"><B>syntax type</B></A> <I>n.</I> (of a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>) one of several classifications, enumerated in <A REL=DEFINITION HREF="02_ad.htm#possiblesyntaxtypes">Figure 2-6</A>, that are used for dispatch during parsing by the <A REL=DEFINITION HREF="26_glo_l.htm#lisp_reader"><I>Lisp reader</I></A>. See <A REL=CHILD HREF="02_ad.htm">Section 2.1.4 (Character Syntax Types)</A>. <P>
<P><A NAME="system_class"><B>system class</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> that may be of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_built_.htm#built-in-class"><B>built-in-class</B></A> in a <A REL=DEFINITION HREF="26_glo_c.htm#conforming_implementation"><I>conforming implementation</I></A> and hence cannot be inherited by <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>classes</I></A> defined by <A REL=DEFINITION HREF="26_glo_c.htm#conforming_program"><I>conforming programs</I></A>. <P>
<P><A NAME="system_code"><B>system code</B></A> <I>n.</I> <A REL=DEFINITION HREF="26_glo_c.htm#code"><I>code</I></A> supplied by the <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> to implement this specification (e.g., the definition of <A REL=DEFINITION HREF="f_mapc_.htm#mapcar"><B>mapcar</B></A>) or generated automatically in support of this specification (e.g., during method combination); that is, <A REL=DEFINITION HREF="26_glo_c.htm#code"><I>code</I></A> that is not <A REL=DEFINITION HREF="26_glo_p.htm#programmer_code"><I>programmer code</I></A>. <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issues</A>, <I>not part of the specification</I>, apply to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss329.htm">STRING-COERCION:MAKE-CONSISTENT</A><LI> <A REL=CHILD HREF="../Issues/iss262.htm">PATHNAME-STREAM:FILES-OR-SYNONYM</A><LI> <A REL=CHILD HREF="../Issues/iss053.htm">CLOSED-STREAM-OPERATIONS:ALLOW-INQUIRY</A><LI> <A REL=CHILD HREF="../Issues/iss365.htm">WITH-STANDARD-IO-SYNTAX-READTABLE:X3J13-MAR-91</A><LI> <A REL=CHILD HREF="../Issues/iss101.htm">DEFINE-COMPILER-MACRO:X3J13-NOV89</A><LI> <A REL=CHILD HREF="../Issues/iss213.htm">LISP-SYMBOL-REDEFINITION-AGAIN:MORE-FIXES</A><LI> <A REL=CHILD HREF="../Issues/iss308.htm">SETF-METHOD-VS-SETF-METHOD:RENAME-OLD-TERMS</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
