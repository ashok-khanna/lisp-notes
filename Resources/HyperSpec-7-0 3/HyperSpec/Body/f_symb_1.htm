<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Accessor SYMBOL-FUNCTION</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_gentem.htm">
<LINK REL=UP HREF="c_symbol.htm">
<LINK REL=NEXT HREF="f_symb_2.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="f_gentem.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_symbol.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="f_symb_2.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="symbol-function"><I>Accessor</I> <B>SYMBOL-FUNCTION</B></A> <P>
<P><B>Syntax:</B><P>
 <P>

<B>symbol-function</B> <I>symbol</I> =&gt; <I>contents</I><P>
 
<TT>(setf (</TT><B>symbol-function</B> <I>symbol</I><TT>) </TT><I>new-contents</I><TT>)</TT><P>
 <P>
<P><B>Arguments and Values:</B><P>
 <P>
 <I>symbol</I>---a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>.  <P>
<I>contents</I>---  If the <I>symbol</I> is globally defined as a <A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macro</I></A> or a <A REL=DEFINITION HREF="26_glo_s.htm#special_operator"><I>special operator</I></A>, an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> of <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent"><I>implementation-dependent</I></A> nature and identity is returned. If the <I>symbol</I> is not globally defined as either a <A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macro</I></A> or a <A REL=DEFINITION HREF="26_glo_s.htm#special_operator"><I>special operator</I></A>, and if the <I>symbol</I> is <A REL=DEFINITION HREF="26_glo_f.htm#fbound"><I>fbound</I></A>, a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> is returned.  <P>
 <I>new-contents</I>---a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A>.  <P>
<P><B>Description:</B><P>
 <P>
<A REL=DEFINITION HREF="26_glo_a.htm#access"><I>Accesses</I></A> the <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>'s <A REL=DEFINITION HREF="26_glo_f.htm#function_cell"><I>function cell</I></A>. <P>
<P><B>Examples:</B><P>
 <P>
<PRE>
 (symbol-function 'car) =&gt;  #&lt;FUNCTION CAR&gt;
 (symbol-function 'twice) is an error   ;because TWICE isn't defined.
 (defun twice (n) (* n 2)) =&gt;  TWICE
 (symbol-function 'twice) =&gt;  #&lt;FUNCTION TWICE&gt;
 (list (twice 3)
       (funcall (function twice) 3)
       (funcall (symbol-function 'twice) 3))
=&gt;  (6 6 6)
 (flet ((twice (x) (list x x)))
   (list (twice 3)
         (funcall (function twice) 3)
         (funcall (symbol-function 'twice) 3)))
=&gt;  ((3 3) (3 3) 6)   
 (setf (symbol-function 'twice) #'(lambda (x) (list x x)))
=&gt;  #&lt;FUNCTION anonymous&gt;
 (list (twice 3)
       (funcall (function twice) 3)
       (funcall (symbol-function 'twice) 3))
=&gt;  ((3 3) (3 3) (3 3))
 (fboundp 'defun) =&gt;  <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>
 (symbol-function 'defun)
=&gt;  <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent">implementation-dependent</A>
 (functionp (symbol-function 'defun))
=&gt;  <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent">implementation-dependent</A>
 (defun symbol-function-or-nil (symbol)
   (if (and (fboundp symbol) 
            (not (macro-function symbol))
            (not (special-operator-p symbol)))
       (symbol-function symbol)
       nil)) =&gt;  SYMBOL-FUNCTION-OR-NIL
 (symbol-function-or-nil 'car) =&gt;  #&lt;FUNCTION CAR&gt;
 (symbol-function-or-nil 'defun) =&gt;  NIL
</PRE>
</TT>  <P>
<P><B>Side Effects:</B> None.
 <P>
<P><B>Affected By:</B><P>
 <P>
<A REL=DEFINITION HREF="m_defun.htm#defun"><B>defun</B></A> <P>
<P><B>Exceptional Situations:</B><P>
 <P>
Should signal an error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_tp_err.htm#type-error"><B>type-error</B></A> if <I>symbol</I> is not a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>. <P>
Should signal <A REL=DEFINITION HREF="e_undefi.htm#undefined-function"><B>undefined-function</B></A> if <I>symbol</I> is not <A REL=DEFINITION HREF="26_glo_f.htm#fbound"><I>fbound</I></A> and an attempt is made to <A REL=DEFINITION HREF="26_glo_r.htm#read"><I>read</I></A> its definition. (No such error is signaled on an attempt to <A REL=DEFINITION HREF="26_glo_w.htm#write"><I>write</I></A> its definition.) <P>
<P><B>See Also:</B><P>
 <P>
<A REL=DEFINITION HREF="f_fbound.htm#fboundp"><B>fboundp</B></A>, <A REL=DEFINITION HREF="f_fmakun.htm#fmakunbound"><B>fmakunbound</B></A>, <A REL=DEFINITION HREF="f_macro_.htm#macro-function"><B>macro-function</B></A>,  <A REL=DEFINITION HREF="f_specia.htm#special-operator-p"><B>special-operator-p</B></A>  <P>
<P><B>Notes:</B><P>
 <A REL=DEFINITION HREF="#symbol-function"><B>symbol-function</B></A> cannot <A REL=DEFINITION HREF="26_glo_a.htm#access"><I>access</I></A> the value of a lexical function name produced by <A REL=DEFINITION HREF="s_flet_.htm#flet"><B>flet</B></A> or <A REL=DEFINITION HREF="s_flet_.htm#labels"><B>labels</B></A>; it can <A REL=DEFINITION HREF="26_glo_a.htm#access"><I>access</I></A> only the global function value. <P>
<A REL=DEFINITION HREF="m_setf_.htm#setf"><B>setf</B></A> may be used with <A REL=DEFINITION HREF="#symbol-function"><B>symbol-function</B></A> to replace a global function definition when the <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A>'s function definition does not represent a <A REL=DEFINITION HREF="26_glo_s.htm#special_operator"><I>special operator</I></A>. <P>
<PRE>
(symbol-function symbol) ==  (fdefinition symbol)
</PRE>
</TT> However, <A REL=DEFINITION HREF="f_fdefin.htm#fdefinition"><B>fdefinition</B></A> accepts arguments other than just <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbols</I></A>. <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issues</A>, <I>not part of the specification</I>, apply to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss321.htm">SPECIAL-FORM-P-MISNOMER:RENAME</A><LI> <A REL=CHILD HREF="../Issues/iss179.htm">FUNCTION-TYPE:X3J13-MARCH-88</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
