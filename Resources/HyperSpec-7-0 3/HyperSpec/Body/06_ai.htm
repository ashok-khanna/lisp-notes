<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Section 6.1.9</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="06_aha.htm">
<LINK REL=UP HREF="06_a.htm">
<LINK REL=NEXT HREF="c_iterat.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="06_aha.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="06_a.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="c_iterat.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<H2>
6.1.9 Notes about Loop</H2> <P>
<A REL=DEFINITION HREF="26_glo_t.htm#type"><I>Types</I></A> can be supplied for loop variables. It is not necessary to supply a <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> for any variable, but supplying the <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> can ensure that the variable has a correctly typed initial value, and it can also enable compiler optimizations (depending on the <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A>). <P>
The clause <TT>repeat</TT> <I>n</I> ... is roughly equivalent to a clause such as <P>
<PRE>
 (loop for internal-variable downfrom (- n 1) to 0 ...)
</PRE>
</TT> <P>
but in some <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A>, the <TT>repeat</TT> construct might be more efficient. <P>
Within the executable parts of the loop clauses and around the entire <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A> form, variables can be bound by using <A REL=DEFINITION HREF="s_let_l.htm#let"><B>let</B></A>. <P>
 Use caution when using a variable named <TT>IT</TT> (in any <A REL=DEFINITION HREF="26_glo_p.htm#package"><I>package</I></A>) in connection with <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A>, since <TT>it</TT> is a <A REL=DEFINITION HREF="26_glo_l.htm#loop_keyword"><I>loop keyword</I></A> that can be used in place of a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> in certain contexts.  <P>
There is  no  <A REL=DEFINITION HREF="26_glo_s.htm#standardized"><I>standardized</I></A> mechanism for users to add extensions to <A REL=DEFINITION HREF="m_loop.htm#loop"><B>loop</B></A>. <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issue</A>, <I>not part of the specification</I>, applies to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss223.htm">LOOP-MISCELLANEOUS-REPAIRS:FIX</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
