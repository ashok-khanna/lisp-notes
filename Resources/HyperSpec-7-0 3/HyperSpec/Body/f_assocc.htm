<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Function ASSOC, ASSOC-IF, ASSOC-IF-NOT</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_acons.htm">
<LINK REL=UP HREF="c_conses.htm">
<LINK REL=NEXT HREF="f_cp_ali.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="f_acons.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_conses.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="f_cp_ali.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="assoc"><A NAME="assoc-if"><A NAME="assoc-if-not"><I>Function</I> <B>ASSOC, ASSOC-IF, ASSOC-IF-NOT</B></A></A></A> <P>
<P><B>Syntax:</B><P>
 <P>

<B>assoc</B> <I>item alist <TT>&amp;key</TT> key test test-not</I> =&gt; <I>entry</I><P>
 <P>
 <P>

<B>assoc-if</B> <I>predicate alist <TT>&amp;key</TT> key</I> =&gt; <I>entry</I><P>
 
<B>assoc-if-not</B> <I>predicate alist <TT>&amp;key</TT> key</I> =&gt; <I>entry</I><P>
 <P>
 <P>
<P><B>Arguments and Values:</B><P>
 <P>
<I>item</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>alist</I>---an <A REL=DEFINITION HREF="26_glo_a.htm#association_list"><I>association list</I></A>. <P>
<I>predicate</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of one <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>argument</I></A> that returns a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A>. <P>
<I>test</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of two <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A> that returns a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A>. <P>
<I>test-not</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of two <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A> that returns a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A>. <P>
<I>key</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of one argument, or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<I>entry</I>---a <A REL=DEFINITION HREF="26_glo_c.htm#cons"><I>cons</I></A> that is an <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A> of <I>alist</I>, or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<P><B>Description:</B><P>
 <P>
 <A REL=DEFINITION HREF="#assoc"><B>assoc</B></A>, <A REL=DEFINITION HREF="#assoc-if"><B>assoc-if</B></A>, and <A REL=DEFINITION HREF="#assoc-if-not"><B>assoc-if-not</B></A> return the first <A REL=DEFINITION HREF="26_glo_c.htm#cons"><I>cons</I></A> in <I>alist</I> whose <A REL=DEFINITION HREF="26_glo_c.htm#car"><I>car</I></A> <I>satisfies the test</I>, or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> if no such <A REL=DEFINITION HREF="26_glo_c.htm#cons"><I>cons</I></A> is found.  <P>
For <A REL=DEFINITION HREF="#assoc"><B>assoc</B></A>, <A REL=DEFINITION HREF="#assoc-if"><B>assoc-if</B></A>, and <A REL=DEFINITION HREF="#assoc-if-not"><B>assoc-if-not</B></A>, if <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> appears in <I>alist</I> in place of a pair, it is ignored. <P>
<P><B>Examples:</B><P>
 <P>
 
<PRE>
 (setq values '((x . 100) (y . 200) (z . 50))) =&gt;  ((X . 100) (Y . 200) (Z . 50))
 (assoc 'y values) =&gt;  (Y . 200)
 (rplacd (assoc 'y values) 201) =&gt;  (Y . 201)
 (assoc 'y values) =&gt;  (Y . 201)
 (setq alist '((1 . &quot;one&quot;)(2 . &quot;two&quot;)(3 . &quot;three&quot;))) 
=&gt;  ((1 . &quot;one&quot;) (2 . &quot;two&quot;) (3 . &quot;three&quot;))
 (assoc 2 alist) =&gt;  (2 . &quot;two&quot;)
 (assoc-if #'evenp alist) =&gt;  (2 . &quot;two&quot;)
 (assoc-if-not #'(lambda(x) (&lt; x 3)) alist) =&gt;  (3 . &quot;three&quot;)
 (setq alist '((&quot;one&quot; . 1)(&quot;two&quot; . 2))) =&gt;  ((&quot;one&quot; . 1) (&quot;two&quot; . 2))
 (assoc &quot;one&quot; alist) =&gt;  NIL
 (assoc &quot;one&quot; alist :test #'equalp) =&gt;  (&quot;one&quot; . 1)
 (assoc &quot;two&quot; alist :key #'(lambda(x) (char x 2))) =&gt;  NIL 
 (assoc #\o alist :key #'(lambda(x) (char x 2))) =&gt;  (&quot;two&quot; . 2)
 (assoc 'r '((a . b) (c . d) (r . x) (s . y) (r . z))) =&gt;   (R . X)
 (assoc 'goo '((foo . bar) (zoo . goo))) =&gt;  NIL
 (assoc '2 '((1 a b c) (2 b c d) (-7 x y z))) =&gt;  (2 B C D)
 (setq alist '((&quot;one&quot; . 1) (&quot;2&quot; . 2) (&quot;three&quot; . 3)))
=&gt;  ((&quot;one&quot; . 1) (&quot;2&quot; . 2) (&quot;three&quot; . 3))
 (assoc-if-not #'alpha-char-p alist
               :key #'(lambda (x) (char x 0))) =&gt;  (&quot;2&quot; . 2)
</PRE>
</TT>  <P>
<P><B>Affected By:</B> None.
 <P>
<P><B>Exceptional Situations:</B><P>
 <P>
Should be prepared to signal an error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_tp_err.htm#type-error"><B>type-error</B></A> if <I>alist</I> is not an <A REL=DEFINITION HREF="26_glo_a.htm#association_list"><I>association list</I></A>. <P>
<P><B>See Also:</B><P>
 <P>
<A REL=DEFINITION HREF="f_rassoc.htm#rassoc"><B>rassoc</B></A>, <A REL=DEFINITION HREF="f_find_.htm#find"><B>find</B></A>, <A REL=DEFINITION HREF="f_mem_m.htm#member"><B>member</B></A>, <A REL=DEFINITION HREF="f_pos_p.htm#position"><B>position</B></A>,  <A REL=CHILD HREF="03_f.htm">Section 3.6 (Traversal Rules and Side Effects)</A>  <P>
<P><B>Notes:</B><P>
 <P>
 The <TT>:test-not</TT> parameter is deprecated.  <P>
 The <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="#assoc-if-not"><B>assoc-if-not</B></A> is deprecated.  <P>
It is possible to <A REL=DEFINITION HREF="f_rplaca.htm#rplacd"><B>rplacd</B></A> the result of <A REL=DEFINITION HREF="#assoc"><B>assoc</B></A>, provided that it is not <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, in order to ``update'' <I>alist</I>. <P>
The two expressions <P>
<PRE>
 (assoc item list :test fn)
</PRE>
</TT> and <P>
<PRE>
 (find item list :test fn :key #'car)
</PRE>
</TT> are equivalent in meaning with one exception: if <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> appears in <I>alist</I> in place of a pair, and <I>item</I> is <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, <A REL=DEFINITION HREF="f_find_.htm#find"><B>find</B></A> will compute the <A REL=DEFINITION HREF="26_glo_c.htm#car"><I>car</I></A> of the <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> in <I>alist</I>, find that it is equal to <I>item</I>, and return <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, whereas <A REL=DEFINITION HREF="#assoc"><B>assoc</B></A> will ignore the <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> in <I>alist</I> and continue to search for an actual <A REL=DEFINITION HREF="26_glo_c.htm#cons"><I>cons</I></A> whose <A REL=DEFINITION HREF="26_glo_c.htm#car"><I>car</I></A> is <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issues</A>, <I>not part of the specification</I>, apply to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss345.htm">TEST-NOT-IF-NOT:FLUSH-ALL</A><LI> <A REL=CHILD HREF="../Issues/iss240.htm">MAPPING-DESTRUCTIVE-INTERACTION:EXPLICITLY-VAGUE</A><LI> <A REL=CHILD HREF="../Issues/iss017.htm">ASSOC-RASSOC-IF-KEY</A><LI> <A REL=CHILD HREF="../Issues/iss018.htm">ASSOC-RASSOC-IF-KEY:YES</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
