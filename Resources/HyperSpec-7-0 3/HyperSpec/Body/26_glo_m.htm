<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Glossary-Section M</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="26_glo_l.htm">
<LINK REL=UP HREF="26_a.htm">
<LINK REL=NEXT HREF="26_glo_n.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="26_glo_l.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="26_a.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="26_glo_n.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<B>M</B> <P>
<P><A NAME="macro"><B>macro</B></A> <I>n.</I> 1. a <A REL=DEFINITION HREF="#macro_form"><I>macro form</I></A> 2. a <A REL=DEFINITION HREF="#macro_function"><I>macro function</I></A>. 3. a <A REL=DEFINITION HREF="#macro_name"><I>macro name</I></A>. <P>
<P><A NAME="macro_character"><B>macro character</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> which, when encountered by the <A REL=DEFINITION HREF="26_glo_l.htm#lisp_reader"><I>Lisp reader</I></A> in its main dispatch loop, introduces a <A REL=DEFINITION HREF="26_glo_r.htm#reader_macro"><I>reader macro</I></A>[1]. (<A REL=DEFINITION HREF="#macro_character"><I>Macro characters</I></A> have nothing to do with <A REL=DEFINITION HREF="#macro"><I>macros</I></A>.) <P>
<P><A NAME="macro_expansion"><B>macro expansion</B></A> <I>n.</I> 1. the process of translating a <A REL=DEFINITION HREF="#macro_form"><I>macro form</I></A> into another <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. 2. the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> resulting from this process. <P>
<P><A NAME="macro_form"><B>macro form</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> that stands for another <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> (e.g., for the purposes of abstraction, information hiding, or syntactic convenience); that is, either a <A REL=DEFINITION HREF="26_glo_c.htm#compound_form"><I>compound form</I></A> whose first element is a <A REL=DEFINITION HREF="#macro_name"><I>macro name</I></A>, or a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> that is a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> that names a <A REL=DEFINITION HREF="26_glo_s.htm#symbol_macro"><I>symbol macro</I></A>. <P>
<P><A NAME="macro_function"><B>macro function</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of two arguments, a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> and an <A REL=DEFINITION HREF="26_glo_e.htm#environment"><I>environment</I></A>, that implements <A REL=DEFINITION HREF="#macro_expansion"><I>macro expansion</I></A> by producing a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> to be evaluated in place of the original argument <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. <P>
<P><A NAME="macro_lambda_list"><B>macro lambda list</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_e.htm#extended_lambda_list"><I>extended lambda list</I></A> used in <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A> that <A REL=DEFINITION HREF="26_glo_e.htm#establish"><I>establish</I></A> <A REL=DEFINITION HREF="#macro"><I>macro</I></A> definitions, such as <A REL=DEFINITION HREF="m_defmac.htm#defmacro"><B>defmacro</B></A> and <A REL=DEFINITION HREF="s_flet_.htm#macrolet"><B>macrolet</B></A>. See <A REL=CHILD HREF="03_dd.htm">Section 3.4.4 (Macro Lambda Lists)</A>. <P>
<P><A NAME="macro_name"><B>macro name</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>name</I></A> for which <A REL=DEFINITION HREF="f_macro_.htm#macro-function"><B>macro-function</B></A> returns <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A> and which when used as the first element of a <A REL=DEFINITION HREF="26_glo_c.htm#compound_form"><I>compound form</I></A> identifies that <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> as a <A REL=DEFINITION HREF="#macro_form"><I>macro form</I></A>. <P>
<P><A NAME="macroexpand_hook"><B>macroexpand hook</B></A> <I>n.</I> the <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> that is the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A> of <A REL=DEFINITION HREF="v_mexp_h.htm#STmacroexpand-hookST"><B>*macroexpand-hook*</B></A>. <P>
<P><A NAME="mapping"><B>mapping</B></A> <I>n.</I> 1. a type of iteration in which a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> is successively applied to <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> taken from corresponding entries in collections such as <A REL=DEFINITION HREF="26_glo_s.htm#sequence"><I>sequences</I></A> or <A REL=DEFINITION HREF="26_glo_h.htm#hash_table"><I>hash tables</I></A>. 2. <I>Math.</I> a relation between two sets in which each element of the first set (the ``domain'') is assigned one element of the second set (the ``range''). <P>
<P><A NAME="metaclass"><B>metaclass</B></A> <I>n.</I> 1. a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> whose instances are <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>classes</I></A>. 2. (of an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>) the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> of the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> of the <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<P><A NAME="metaobject_protocol"><B>Metaobject Protocol</B></A> <I>n.</I> one of many possible descriptions of how a <A REL=DEFINITION HREF="26_glo_c.htm#conforming_implementation"><I>conforming implementation</I></A> might implement various aspects of the object system. This description is beyond the scope of this document, and no <A REL=DEFINITION HREF="26_glo_c.htm#conforming_implementation"><I>conforming implementation</I></A> is required to adhere to it except as noted explicitly in this specification. Nevertheless, its existence helps to establish normative practice, and implementors with no reason to diverge from it are encouraged to consider making their <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> adhere to it where possible. It is described in detail in <A REL=CITATION HREF="http://www.parc.xerox.com/spl/groups/eca/pubs/complete.html#Kiczales:AMOP"><I>The Art of the Metaobject Protocol</I></A>. <P>
<P><A NAME="method"><B>method</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A> that is part of a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> and which provides information about how that <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> should behave when its <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A> are <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> of certain <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>classes</I></A> or with certain identities. <P>
<P><A NAME="method_combination"><B>method combination</B></A> <I>n.</I> 1. generally, the composition of a set of <A REL=DEFINITION HREF="#method"><I>methods</I></A> to produce an <A REL=DEFINITION HREF="26_glo_e.htm#effective_method"><I>effective method</I></A> for a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>. 2. an object of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="t_meth_1.htm#method-combination"><B>method-combination</B></A>, which represents the details of how the <A REL=DEFINITION HREF="#method_combination"><I>method combination</I></A>[1] for one or more specific <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic functions</I></A> is to be performed. <P>
<P><A NAME="method-defining_form"><B>method-defining form</B></A> <I>n.</I> a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> that defines a <A REL=DEFINITION HREF="#method"><I>method</I></A> for a <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>, whether explicitly or implicitly. See <A REL=CHILD HREF="07_fa.htm">Section 7.6.1 (Introduction to Generic Functions)</A>. <P>
<P><A NAME="method-defining_operator"><B>method-defining operator</B></A> <I>n.</I> an <A REL=DEFINITION HREF="26_glo_o.htm#operator"><I>operator</I></A> corresponding to a <I>method-defining</I> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>. See <A REL=DEFINITION HREF="07_fa.htm#stdmethdefops">Figure 7-1</A>. <P>
<P><A NAME="minimal_compilation"><B>minimal compilation</B></A> <I>n.</I> actions the <A REL=DEFINITION HREF="26_glo_c.htm#compiler"><I>compiler</I></A> must take at compile time. See <A REL=CHILD HREF="03_bb.htm">Section 3.2.2 (Compilation Semantics)</A>. <P>
<P><A NAME="modified_lambda_list"><B>modified lambda list</B></A> <I>n.</I> a list resembling an <A REL=DEFINITION HREF="26_glo_o.htm#ordinary_lambda_list"><I>ordinary lambda list</I></A> in form and purpose, but which deviates in syntax or functionality from the definition of an <A REL=DEFINITION HREF="26_glo_o.htm#ordinary_lambda_list"><I>ordinary lambda list</I></A>. See <A REL=DEFINITION HREF="26_glo_o.htm#ordinary_lambda_list"><I>ordinary lambda list</I></A>. ``<A REL=DEFINITION HREF="m_deftp.htm#deftype"><B>deftype</B></A> uses a modified lambda list.'' <P>
<P><A NAME="most_recent"><B>most recent</B></A> <I>adj.</I> innermost; that is, having been <I>established</I> (and not yet <I>disestablished</I>) more recently than any other of its kind. <P>
<P><A NAME="multiple_escape"><B>multiple escape</B></A> <I>n.</I>, <I>adj.</I> 1. <I>n.</I> the <A REL=DEFINITION HREF="26_glo_s.htm#syntax_type"><I>syntax type</I></A> of a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A> that is used in pairs to indicate that the enclosed <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> are to be treated as <A REL=DEFINITION HREF="26_glo_a.htm#alphabetic"><I>alphabetic</I></A>[2] <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>characters</I></A> with their <A REL=DEFINITION HREF="26_glo_c.htm#case"><I>case</I></A> preserved. For details, see <A REL=CHILD HREF="02_ade.htm">Section 2.1.4.5 (Multiple Escape Characters)</A>. 2. <I>adj.</I> (of a <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>) having the <A REL=DEFINITION HREF="#multiple_escape"><I>multiple escape</I></A> <A REL=DEFINITION HREF="26_glo_s.htm#syntax_type"><I>syntax type</I></A>. 3. <I>n.</I> a <A REL=DEFINITION HREF="#multiple_escape"><I>multiple escape</I></A>[2] <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>. (In the <A REL=DEFINITION HREF="26_glo_s.htm#standard_readtable"><I>standard readtable</I></A>, <A REL=DEFINITION HREF="26_glo_v.htm#vertical-bar"><I>vertical-bar</I></A> is a <A REL=DEFINITION HREF="#multiple_escape"><I>multiple escape</I></A> <A REL=DEFINITION HREF="26_glo_c.htm#character"><I>character</I></A>.) <P>
<P><A NAME="multiple_values"><B>multiple values</B></A> <I>n.</I> 1. more than one <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>value</I></A>. ``The function <A REL=DEFINITION HREF="f_floorc.htm#truncate"><B>truncate</B></A> returns multiple values.'' 2. a variable number of <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A>, possibly including zero or one. ``The function <A REL=DEFINITION HREF="f_values.htm#values"><B>values</B></A> returns multiple values.'' 3. a fixed number of values other than one. ``The macro <A REL=DEFINITION HREF="m_multip.htm#multiple-value-bind"><B>multiple-value-bind</B></A> is among the few operators in Common Lisp which can detect and manipulate multiple values.'' <P>
<HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
