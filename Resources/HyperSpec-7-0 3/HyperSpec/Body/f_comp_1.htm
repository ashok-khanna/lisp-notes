<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Function COMPUTE-RESTARTS</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="t_rst.htm">
<LINK REL=UP HREF="c_condit.htm">
<LINK REL=NEXT HREF="f_find_r.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="t_rst.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_condit.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="f_find_r.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="compute-restarts"><I>Function</I> <B>COMPUTE-RESTARTS</B></A> <P>
<P><B>Syntax:</B><P>
 <P>
 
<B>compute-restarts</B> <I><TT>&amp;optional</TT> condition</I> =&gt; <I>restarts</I><P>
  <P>
<P><B>Arguments and Values:</B><P>
 <P>
 <I>condition</I>---a <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A> <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>, or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>.  <P>
<I>restarts</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of <A REL=DEFINITION HREF="26_glo_r.htm#restart"><I>restarts</I></A>. <P>
<P><B>Description:</B><P>
 <P>
<A REL=DEFINITION HREF="#compute-restarts"><B>compute-restarts</B></A> uses the dynamic state of the program to compute a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of the <A REL=DEFINITION HREF="26_glo_r.htm#restart"><I>restarts</I></A> which are currently active. <P>
The resulting <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> is ordered so that the innermost (more-recently established) restarts are nearer the head of the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>. <P>
 When <I>condition</I> is <A REL=DEFINITION HREF="26_glo_n.htm#non-nil"><I>non-nil</I></A>, only those <A REL=DEFINITION HREF="26_glo_r.htm#restart"><I>restarts</I></A> are considered that are either explicitly associated with that <I>condition</I>, or not associated with any <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>condition</I></A>; that is, the excluded <A REL=DEFINITION HREF="26_glo_r.htm#restart"><I>restarts</I></A> are those that are associated with a non-empty set of <A REL=DEFINITION HREF="26_glo_c.htm#condition"><I>conditions</I></A> of which the given <I>condition</I> is not an <A REL=DEFINITION HREF="26_glo_e.htm#element"><I>element</I></A>. If <I>condition</I> is <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, all <A REL=DEFINITION HREF="26_glo_r.htm#restart"><I>restarts</I></A> are considered.  <P>
<A REL=DEFINITION HREF="#compute-restarts"><B>compute-restarts</B></A> returns all <A REL=DEFINITION HREF="26_glo_a.htm#applicable_restart"><I>applicable restarts</I></A>, including anonymous ones, even if some of them have the same name as others and would therefore not be found by <A REL=DEFINITION HREF="f_find_r.htm#find-restart"><B>find-restart</B></A> when given a <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> argument. <P>
Implementations are permitted, but not required, to return <A REL=DEFINITION HREF="26_glo_d.htm#distinct"><I>distinct</I></A> <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>lists</I></A> from repeated calls to <A REL=DEFINITION HREF="#compute-restarts"><B>compute-restarts</B></A> while in the same dynamic environment. The consequences are undefined if the <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> returned by <A REL=DEFINITION HREF="#compute-restarts"><B>compute-restarts</B></A> is every modified. <P>
<P><B>Examples:</B><P>
 <P>
<PRE>
 ;; One possible way in which an interactive debugger might present
 ;; restarts to the user.
 (defun invoke-a-restart ()
   (let ((restarts (compute-restarts)))
     (do ((i 0 (+ i 1)) (r restarts (cdr r))) ((null r))
       (format t &quot;~&amp;~D: ~A~%&quot; i (car r)))
     (let ((n nil) (k (length restarts)))
       (loop (when (and (typep n 'integer) (&gt;= n 0) (&lt; n k))
               (return t))
             (format t &quot;~&amp;Option: &quot;)
             (setq n (read))
             (fresh-line))
       (invoke-restart-interactively (nth n restarts)))))

 (restart-case (invoke-a-restart)
   (one () 1)
   (two () 2)
   (nil () :report &quot;Who knows?&quot; 'anonymous)
   (one () 'I)
   (two () 'II))
&gt;&gt;  0: ONE
&gt;&gt;  1: TWO
&gt;&gt;  2: Who knows?
&gt;&gt;  3: ONE
&gt;&gt;  4: TWO
&gt;&gt;  5: Return to Lisp Toplevel.
&gt;&gt;  Option: 4
=&gt;  II
 
 ;; Note that in addition to user-defined restart points, COMPUTE-RESTARTS
 ;; also returns information about any system-supplied restarts, such as
 ;; the &quot;Return to Lisp Toplevel&quot; restart offered above.
 
</PRE>
</TT> <P>
<P><B>Side Effects:</B> None.
 <P>
<P><B>Affected By:</B><P>
 <P>
Existing restarts. <P>
<P><B>Exceptional Situations:</B> None.
 <P>
<P><B>See Also:</B><P>
 <P>
<A REL=DEFINITION HREF="f_find_r.htm#find-restart"><B>find-restart</B></A>, <A REL=DEFINITION HREF="f_invo_1.htm#invoke-restart"><B>invoke-restart</B></A>, <A REL=DEFINITION HREF="m_rst_bi.htm#restart-bind"><B>restart-bind</B></A> <P>
<P><B>Notes:</B> None.
 <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issue</A>, <I>not part of the specification</I>, applies to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss076.htm">CONDITION-RESTARTS:PERMIT-ASSOCIATION</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
