<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Section 3.1.7</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="03_af.htm">
<LINK REL=UP HREF="03_a.htm">
<LINK REL=NEXT HREF="03_b.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="03_af.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="03_a.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="03_b.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<H2>
3.1.7 Return Values</H2> <P>
Ordinarily the result of calling a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> is a single <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. Sometimes, however, it is convenient for a function to compute several <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>objects</I></A> and return them. <P>
In order to receive other than exactly one value from a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A>, one of several <A REL=DEFINITION HREF="26_glo_s.htm#special_form"><I>special forms</I></A> or <A REL=DEFINITION HREF="26_glo_m.htm#macro"><I>macros</I></A> must be used to request those values. If a <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> produces <A REL=DEFINITION HREF="26_glo_m.htm#multiple_values"><I>multiple values</I></A> which were not requested in this way, then the first value is given to the caller and all others are discarded; if the <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> produces zero values, then the caller receives <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> as a value. <P>
The next figure lists some <A REL=DEFINITION HREF="26_glo_o.htm#operator"><I>operators</I></A> for receiving <A REL=DEFINITION HREF="26_glo_m.htm#multiple_values"><I>multiple values</I></A>[2]. These <A REL=DEFINITION HREF="26_glo_o.htm#operator"><I>operators</I></A> can be used to specify one or more <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A> to <A REL=DEFINITION HREF="26_glo_e.htm#evaluate"><I>evaluate</I></A> and where to put the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A> returned by those <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A>. <P>
<PRE>
<A REL=DEFINITION HREF="m_multip.htm#multiple-value-bind">multiple-value-bind</A>  <A REL=DEFINITION HREF="s_mult_1.htm#multiple-value-prog1">multiple-value-prog1</A>  <A REL=DEFINITION HREF="s_ret_fr.htm#return-from">return-from</A>  
<A REL=DEFINITION HREF="s_multip.htm#multiple-value-call">multiple-value-call</A>  <A REL=DEFINITION HREF="m_mult_2.htm#multiple-value-setq">multiple-value-setq</A>   <A REL=DEFINITION HREF="s_throw.htm#throw">throw</A>        
<A REL=DEFINITION HREF="m_mult_1.htm#multiple-value-list">multiple-value-list</A>  <A REL=DEFINITION HREF="m_return.htm#return">return</A>                             
</PRE>
<P><B>Figure 3-5.  Some operators applicable to receiving multiple values</B> <P>
The <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="f_values.htm#values"><B>values</B></A> can produce <A REL=DEFINITION HREF="26_glo_m.htm#multiple_values"><I>multiple values</I></A>[2]. <TT>(values)</TT> returns zero values; <TT>(values </TT><I>form</I><TT>)</TT> returns the <A REL=DEFINITION HREF="26_glo_p.htm#primary_value"><I>primary value</I></A> returned by <I>form</I>; <TT>(values </TT><I>form1</I><TT> </TT><I>form2</I><TT>)</TT> returns two values, the <A REL=DEFINITION HREF="26_glo_p.htm#primary_value"><I>primary value</I></A> of <I>form1</I> and the <A REL=DEFINITION HREF="26_glo_p.htm#primary_value"><I>primary value</I></A> of <I>form2</I>; and so on. <P>
See <A REL=DEFINITION HREF="v_multip.htm#multiple-values-limit"><B>multiple-values-limit</B></A> and <A REL=DEFINITION HREF="f_vals_l.htm#values-list"><B>values-list</B></A>. <P>
<HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
