<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Standard Generic Function UPDATE-INSTANCE-FOR-REDEFINED-CLASS</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_update.htm">
<LINK REL=UP HREF="c_object.htm">
<LINK REL=NEXT HREF="f_chg_cl.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="f_update.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_object.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="f_chg_cl.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="update-instance-for-redefined-class"><I>Standard Generic Function</I> <B>UPDATE-INSTANCE-FOR-REDEFINED-CLASS</B></A> <P>
<P><B>Syntax:</B><P>
 <P>
 
<B>update-instance-for-redefined-class</B> <I>instance added-slots discarded-slots property-list <TT>&amp;rest</TT> initargs <TT>&amp;key</TT> <TT>&amp;allow-other-keys</TT></I><P> =&gt; <I><I>result</I><B>*</B></I><P>
  <P>
<P><B>Method Signatures:</B><P>
 <P>

<B>update-instance-for-redefined-class</B> <I>(<I>instance</I><B> <A REL=DEFINITION HREF="t_std_ob.htm#standard-object">standard-object</A></B>) added-slots discarded-slots property-list <TT>&amp;rest</TT> initargs</I><P>
 <P>
<P><B>Arguments and Values:</B><P>
 <P>
<I>instance</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>added-slots</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>. <P>
<I>discarded-slots</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>. <P>
<I>property-list</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>. <P>
<I>initargs</I>---an <A REL=DEFINITION HREF="26_glo_i.htm#initialization_argument_list"><I>initialization argument list</I></A>. <P>
<I>result</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<P><B>Description:</B><P>
 <P>
The <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> <A REL=DEFINITION HREF="#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A> is not intended to be called by programmers. Programmers may write <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> for it. The <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A> <A REL=DEFINITION HREF="#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A> is called by the mechanism activated by <A REL=DEFINITION HREF="f_mk_i_1.htm#make-instances-obsolete"><B>make-instances-obsolete</B></A>. <P>
The system-supplied primary <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> on <A REL=DEFINITION HREF="#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A> checks the validity of <I>initargs</I> and signals an error if an <I>initarg</I> is supplied that is not declared as valid. This <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> then initializes <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> with values according to the <I>initargs</I>, and initializes the newly <I>added-slots</I> with values according to their <TT>:initform</TT> forms. It does this by calling the generic function <A REL=DEFINITION HREF="f_shared.htm#shared-initialize"><B>shared-initialize</B></A> with the following arguments: the <I>instance</I>, a list of names of the newly <I>added-slots</I> to <I>instance</I>, and the <I>initargs</I> it received. Newly <I>added-slots</I> are those <A REL=DEFINITION HREF="26_glo_l.htm#local_slot"><I>local slots</I></A> for which no <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> of the same name exists in the old version of the <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A>. <P>
When <A REL=DEFINITION HREF="f_mk_i_1.htm#make-instances-obsolete"><B>make-instances-obsolete</B></A> is invoked or when a <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> has been redefined and an <A REL=DEFINITION HREF="26_glo_i.htm#instance"><I>instance</I></A> is being updated, a <I>property-list</I> is created that captures the slot names and values of all the <I>discarded-slots</I> with values in the original <I>instance</I>. The structure of the <I>instance</I> is transformed so that it conforms to the current class definition. The arguments to <A REL=DEFINITION HREF="#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A> are this transformed <I>instance</I>, a list of <I>added-slots</I> to the <I>instance</I>, a list <I>discarded-slots</I> from the <I>instance</I>, and the <I>property-list</I> containing the slot names and values for <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> that were discarded and had values. Included in this list of discarded <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> are <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> that were local in the old <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A> and are shared in the new <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A>. <P>
The value returned by <A REL=DEFINITION HREF="#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A> is ignored. <P>
<P><B>Examples:</B><P>
 <P>
<PRE>
  
 (defclass position () ())
 
 (defclass x-y-position (position)
     ((x :initform 0 :accessor position-x)
      (y :initform 0 :accessor position-y)))
 
;;; It turns out polar coordinates are used more than Cartesian 
;;; coordinates, so the representation is altered and some new
;;; accessor methods are added.
 
 (defmethod update-instance-for-redefined-class :before
    ((pos x-y-position) added deleted plist &amp;key)
   ;; Transform the x-y coordinates to polar coordinates
   ;; and store into the new slots.
   (let ((x (getf plist 'x))
         (y (getf plist 'y)))
     (setf (position-rho pos) (sqrt (+ (* x x) (* y y)))
           (position-theta pos) (atan y x))))
  
 (defclass x-y-position (position)
     ((rho :initform 0 :accessor position-rho)
      (theta :initform 0 :accessor position-theta)))
  
;;; All instances of the old x-y-position class will be updated
;;; automatically.
 
;;; The new representation is given the look and feel of the old one.
 
 (defmethod position-x ((pos x-y-position))  
    (with-slots (rho theta) pos (* rho (cos theta))))
 
 (defmethod (setf position-x) (new-x (pos x-y-position))
    (with-slots (rho theta) pos
      (let ((y (position-y pos)))
        (setq rho (sqrt (+ (* new-x new-x) (* y y)))
              theta (atan y new-x))
        new-x)))
 
 (defmethod position-y ((pos x-y-position))
    (with-slots (rho theta) pos (* rho (sin theta))))
 
 (defmethod (setf position-y) (new-y (pos x-y-position))
    (with-slots (rho theta) pos
      (let ((x (position-x pos)))
        (setq rho (sqrt (+ (* x x) (* new-y new-y)))
              theta (atan new-y x))
        new-y)))
 
</PRE>
</TT> <P>
<P><B>Affected By:</B> None.
 <P>
<P><B>Exceptional Situations:</B><P>
 The system-supplied primary <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> on <A REL=DEFINITION HREF="#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A> signals an error if an <I>initarg</I> is supplied that is not declared as valid. <P>
<P><B>See Also:</B><P>
 <P>
<A REL=DEFINITION HREF="f_mk_i_1.htm#make-instances-obsolete"><B>make-instances-obsolete</B></A>, <A REL=DEFINITION HREF="f_shared.htm#shared-initialize"><B>shared-initialize</B></A>, <A REL=CHILD HREF="04_cf.htm">Section 4.3.6 (Redefining Classes)</A>, <A REL=CHILD HREF="07_ad.htm">Section 7.1.4 (Rules for Initialization Arguments)</A>, <A REL=CHILD HREF="07_ab.htm">Section 7.1.2 (Declaring the Validity of Initialization Arguments)</A> <P>
<P><B>Notes:</B><P>
 <P>
<I>Initargs</I> are declared as valid by using the <TT>:initarg</TT> option to <A REL=DEFINITION HREF="m_defcla.htm#defclass"><B>defclass</B></A>, or by defining <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> for <A REL=DEFINITION HREF="#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A> or <A REL=DEFINITION HREF="f_shared.htm#shared-initialize"><B>shared-initialize</B></A>. The keyword name of each keyword parameter specifier in the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of any <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> defined on <A REL=DEFINITION HREF="#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A> or <A REL=DEFINITION HREF="f_shared.htm#shared-initialize"><B>shared-initialize</B></A> is declared as a valid <I>initarg</I> name for all <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>classes</I></A> for which that <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> is applicable. <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issue</A>, <I>not part of the specification</I>, applies to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss197.htm">INITIALIZATION-FUNCTION-KEYWORD-CHECKING</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
