<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Standard Generic Function SHARED-INITIALIZE</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_reinit.htm">
<LINK REL=UP HREF="c_object.htm">
<LINK REL=NEXT HREF="f_update.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="f_reinit.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_object.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="f_update.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="shared-initialize"><I>Standard Generic Function</I> <B>SHARED-INITIALIZE</B></A> <P>
<P><B>Syntax:</B><P>
 <P>
 
<B>shared-initialize</B> <I>instance slot-names <TT>&amp;rest</TT> initargs <TT>&amp;key</TT> <TT>&amp;allow-other-keys</TT></I> =&gt; <I>instance</I><P>
  <P>
<P><B>Method Signatures:</B><P>
 <P>

<B>shared-initialize</B> <I>(<I>instance</I><B> <A REL=DEFINITION HREF="t_std_ob.htm#standard-object">standard-object</A></B>) slot-names <TT>&amp;rest</TT> initargs</I><P>
 <P>
<P><B>Arguments and Values:</B><P>
 <P>
<I>instance</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>slot-names</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> or <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A>. <P>
<I>initargs</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of <A REL=DEFINITION HREF="26_glo_k.htm#keywordSLvalue_pair"><I>keyword/value pairs</I></A> (of initialization argument <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>names</I></A> and <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A>). <P>
<P><B>Description:</B><P>
 <P>
The generic function <A REL=DEFINITION HREF="#shared-initialize"><B>shared-initialize</B></A> is used to fill the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> of an <I>instance</I> using <I>initargs</I> and <TT>:initform</TT> forms. It is called when an instance is created, when an instance is re-initialized, when an instance is updated to conform to a redefined <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A>, and when an instance is updated to conform to a different <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>class</I></A>. The generic function <A REL=DEFINITION HREF="#shared-initialize"><B>shared-initialize</B></A> is called by the system-supplied primary <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> for <A REL=DEFINITION HREF="f_init_i.htm#initialize-instance"><B>initialize-instance</B></A>, <A REL=DEFINITION HREF="f_reinit.htm#reinitialize-instance"><B>reinitialize-instance</B></A>, <A REL=DEFINITION HREF="f_upda_1.htm#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A>, and <A REL=DEFINITION HREF="f_update.htm#update-instance-for-different-class"><B>update-instance-for-different-class</B></A>. <P>
The generic function <A REL=DEFINITION HREF="#shared-initialize"><B>shared-initialize</B></A> takes the following arguments: the <I>instance</I> to be initialized, a specification of a set of <I>slot-names</I> <A REL=DEFINITION HREF="26_glo_a.htm#accessible"><I>accessible</I></A> in that <I>instance</I>, and any number of <I>initargs</I>. The arguments after the first two must form an <A REL=DEFINITION HREF="26_glo_i.htm#initialization_argument_list"><I>initialization argument list</I></A>. The system-supplied primary <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> on <A REL=DEFINITION HREF="#shared-initialize"><B>shared-initialize</B></A> initializes the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> with values according to the <I>initargs</I> and supplied <TT>:initform</TT> forms. <I>Slot-names</I> indicates which <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> should be initialized according to their <TT>:initform</TT> forms if no <I>initargs</I> are provided for those <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A>. <P>
The system-supplied primary <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> behaves as follows, regardless of whether the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> are local or shared: <P>
<P><UL><P>
<LI>  If an <I>initarg</I> in the <A REL=DEFINITION HREF="26_glo_i.htm#initialization_argument_list"><I>initialization argument list</I></A> specifies a value for that <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>, that value is stored into the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>, even if a value has already been stored in the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> before the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> is run. <P>
<LI>  Any <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> indicated by <I>slot-names</I> that are still unbound at this point are initialized according to their <TT>:initform</TT> forms. For any such <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A> that has an <TT>:initform</TT> form, that <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> is evaluated in the lexical environment of its defining <A REL=DEFINITION HREF="m_defcla.htm#defclass"><B>defclass</B></A> <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>form</I></A> and the result is stored into the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. For example, if a <A REL=DEFINITION HREF="26_glo_b.htm#before_method"><I>before method</I></A> stores a value in the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>, the <TT>:initform</TT> form will not be used to supply a value for the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slot</I></A>. <P>
<LI>  The rules mentioned in <A REL=CHILD HREF="07_ad.htm">Section 7.1.4 (Rules for Initialization Arguments)</A> are obeyed. <P>
<P></UL><P>
The <I>slots-names</I> argument specifies the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A> that are to be initialized according to their <TT>:initform</TT> forms if no initialization arguments apply. It can be a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> of slot <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>names</I></A>, which specifies the set of those slot <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>names</I></A>; or it can be the <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbol</I></A> <A REL=DEFINITION HREF="a_t.htm#t"><B>t</B></A>, which specifies the set of all of the <A REL=DEFINITION HREF="26_glo_s.htm#slot"><I>slots</I></A>. <P>
 <P><B>Examples:</B> None.
 <P>
<P><B>Affected By:</B> None.
 <P>
<P><B>Exceptional Situations:</B> None.
 <P>
 <P><B>See Also:</B><P>
 <P>
<A REL=DEFINITION HREF="f_init_i.htm#initialize-instance"><B>initialize-instance</B></A>, <A REL=DEFINITION HREF="f_reinit.htm#reinitialize-instance"><B>reinitialize-instance</B></A>, <A REL=DEFINITION HREF="f_upda_1.htm#update-instance-for-redefined-class"><B>update-instance-for-redefined-class</B></A>, <A REL=DEFINITION HREF="f_update.htm#update-instance-for-different-class"><B>update-instance-for-different-class</B></A>, <A REL=DEFINITION HREF="f_slt_bo.htm#slot-boundp"><B>slot-boundp</B></A>, <A REL=DEFINITION HREF="f_slt_ma.htm#slot-makunbound"><B>slot-makunbound</B></A>, <A REL=CHILD HREF="07_a.htm">Section 7.1 (Object Creation and Initialization)</A>, <A REL=CHILD HREF="07_ad.htm">Section 7.1.4 (Rules for Initialization Arguments)</A>, <A REL=CHILD HREF="07_ab.htm">Section 7.1.2 (Declaring the Validity of Initialization Arguments)</A> <P>
<P><B>Notes:</B><P>
 <P>
<I>Initargs</I> are declared as valid by using the <TT>:initarg</TT> option to <A REL=DEFINITION HREF="m_defcla.htm#defclass"><B>defclass</B></A>, or by defining <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> for <A REL=DEFINITION HREF="#shared-initialize"><B>shared-initialize</B></A>. The keyword name of each keyword parameter specifier in the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A> of any <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> defined on <A REL=DEFINITION HREF="#shared-initialize"><B>shared-initialize</B></A> is declared as a valid <I>initarg</I> name for all <A REL=DEFINITION HREF="26_glo_c.htm#class"><I>classes</I></A> for which that <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> is applicable. <P>
Implementations are permitted to optimize <TT>:initform</TT> forms that neither produce nor depend on side effects, by evaluating these <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A> and storing them into slots before running any <A REL=DEFINITION HREF="f_init_i.htm#initialize-instance"><B>initialize-instance</B></A> methods, rather than by handling them in the primary <A REL=DEFINITION HREF="f_init_i.htm#initialize-instance"><B>initialize-instance</B></A> method. (This optimization might be implemented by having the <A REL=DEFINITION HREF="f_alloca.htm#allocate-instance"><B>allocate-instance</B></A> method copy a prototype instance.) <P>
Implementations are permitted to optimize default initial value forms for <I>initargs</I> associated with slots by not actually creating the complete initialization argument <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> when the only <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> that would receive the complete <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> is the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> on <A REL=DEFINITION HREF="t_std_ob.htm#standard-object"><B>standard-object</B></A>. In this case default initial value forms can be treated like <TT>:initform</TT> forms. This optimization has no visible effects other than a performance improvement. <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issue</A>, <I>not part of the specification</I>, applies to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss197.htm">INITIALIZATION-FUNCTION-KEYWORD-CHECKING</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
