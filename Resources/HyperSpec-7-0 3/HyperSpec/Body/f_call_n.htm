<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Local Function CALL-NEXT-METHOD</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="m_call_m.htm">
<LINK REL=UP HREF="c_object.htm">
<LINK REL=NEXT HREF="f_comput.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="m_call_m.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_object.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="f_comput.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="call-next-method"><I>Local Function</I> <B>CALL-NEXT-METHOD</B></A> <P>
<P><B>Syntax:</B><P>
 <P>

<B>call-next-method</B> <I><TT>&amp;rest</TT> args</I> =&gt; <I><I>result</I><B>*</B></I><P>
 <P>
<P><B>Arguments and Values:</B><P>
 <P>
<I>arg</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<I>results</I>---the <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A> returned by the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> it calls. <P>
<P><B>Description:</B><P>
 <P>
The <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> can be used  within the body <A REL=DEFINITION HREF="26_glo_f.htm#form"><I>forms</I></A> (but not the <A REL=DEFINITION HREF="26_glo_l.htm#lambda_list"><I>lambda list</I></A>)  of a <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> defined by a <A REL=DEFINITION HREF="26_glo_m.htm#method-defining_form"><I>method-defining form</I></A> to call the <A REL=DEFINITION HREF="26_glo_n.htm#next_method"><I>next method</I></A>. <P>
If there is no next <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A>, the generic function <A REL=DEFINITION HREF="f_no_nex.htm#no-next-method"><B>no-next-method</B></A> is called. <P>
The type of method combination used determines which <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> can invoke <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A>. The standard <A REL=DEFINITION HREF="26_glo_m.htm#method_combination"><I>method combination</I></A> type allows <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> to be used within primary <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>methods</I></A> and <A REL=DEFINITION HREF="26_glo_a.htm#around_method"><I>around methods</I></A>. For generic functions using a type of method combination defined by the short form of <A REL=DEFINITION HREF="m_defi_4.htm#define-method-combination"><B>define-method-combination</B></A>, <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> can be used in <A REL=DEFINITION HREF="26_glo_a.htm#around_method"><I>around methods</I></A> only. <P>
When <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> is called with no arguments, it passes the current <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A>'s original arguments to the next <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A>. Neither argument defaulting, nor using <A REL=DEFINITION HREF="s_setq.htm#setq"><B>setq</B></A>, nor rebinding variables with the same <A REL=DEFINITION HREF="26_glo_n.htm#name"><I>names</I></A> as parameters of the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> affects the values <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> passes to the <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> it calls. <P>
 When <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> is called with arguments, the <A REL=DEFINITION HREF="26_glo_n.htm#next_method"><I>next method</I></A> is called with those arguments. <P>
If <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> is called with arguments but omits optional arguments, the <A REL=DEFINITION HREF="26_glo_n.htm#next_method"><I>next method</I></A> called defaults those arguments. <P>
The <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> returns any <A REL=DEFINITION HREF="26_glo_v.htm#value"><I>values</I></A> that are returned by the <A REL=DEFINITION HREF="26_glo_n.htm#next_method"><I>next method</I></A>. <P>
The <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> has <A REL=DEFINITION HREF="26_glo_l.htm#lexical_scope"><I>lexical scope</I></A> and <A REL=DEFINITION HREF="26_glo_i.htm#indefinite_extent"><I>indefinite extent</I></A> and can only be used within the body of a <A REL=DEFINITION HREF="26_glo_m.htm#method"><I>method</I></A> defined by a <A REL=DEFINITION HREF="26_glo_m.htm#method-defining_form"><I>method-defining form</I></A>. <P>
 Whether or not <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> is <A REL=DEFINITION HREF="26_glo_f.htm#fbound"><I>fbound</I></A> in the <A REL=DEFINITION HREF="26_glo_g.htm#global_environment"><I>global environment</I></A> is <A REL=DEFINITION HREF="26_glo_i.htm#implementation-dependent"><I>implementation-dependent</I></A>; however, the restrictions on redefinition and <I>shadowing</I> of <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> are the same as for <A REL=DEFINITION HREF="26_glo_s.htm#symbol"><I>symbols</I></A> in the <TT>COMMON-LISP</TT> package which are <A REL=DEFINITION HREF="26_glo_f.htm#fbound"><I>fbound</I></A> in the <A REL=DEFINITION HREF="26_glo_g.htm#global_environment"><I>global environment</I></A>. The consequences of attempting to use <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> outside of a <A REL=DEFINITION HREF="26_glo_m.htm#method-defining_form"><I>method-defining form</I></A> are undefined.  <P>
<P><B>Examples:</B> None.
 <P>
<P><B>Affected By:</B><P>
 <P>
<A REL=DEFINITION HREF="m_defmet.htm#defmethod"><B>defmethod</B></A>, <A REL=DEFINITION HREF="m_call_m.htm#call-method"><B>call-method</B></A>, <A REL=DEFINITION HREF="m_defi_4.htm#define-method-combination"><B>define-method-combination</B></A>. <P>
<P><B>Exceptional Situations:</B><P>
 <P>
  When providing arguments to <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A>, the following rule must be satisfied or an error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_error.htm#error"><B>error</B></A> should be signaled: the ordered set of <A REL=DEFINITION HREF="26_glo_a.htm#applicable_method"><I>applicable methods</I></A> for a changed set of arguments for <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A> must be the same as the ordered set of <A REL=DEFINITION HREF="26_glo_a.htm#applicable_method"><I>applicable methods</I></A> for the original arguments to the <A REL=DEFINITION HREF="26_glo_g.htm#generic_function"><I>generic function</I></A>. Optimizations of the error checking are possible, but they must not change the semantics of <A REL=DEFINITION HREF="#call-next-method"><B>call-next-method</B></A>. <P>
<P><B>See Also:</B><P>
 <P>
<A REL=DEFINITION HREF="m_defi_4.htm#define-method-combination"><B>define-method-combination</B></A>, <A REL=DEFINITION HREF="m_defmet.htm#defmethod"><B>defmethod</B></A>, <A REL=DEFINITION HREF="f_next_m.htm#next-method-p"><B>next-method-p</B></A>, <A REL=DEFINITION HREF="f_no_nex.htm#no-next-method"><B>no-next-method</B></A>, <A REL=DEFINITION HREF="m_call_m.htm#call-method"><B>call-method</B></A>, <A REL=CHILD HREF="07_ff.htm">Section 7.6.6 (Method Selection and Combination)</A>, <A REL=CHILD HREF="07_ffb.htm">Section 7.6.6.2 (Standard Method Combination)</A>, <A REL=CHILD HREF="07_ffd.htm">Section 7.6.6.4 (Built-in Method Combination Types)</A> <P>
<P><B>Notes:</B> None.
 <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issues</A>, <I>not part of the specification</I>, apply to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss211.htm">LEXICAL-CONSTRUCT-GLOBAL-DEFINITION:UNDEFINED</A><LI> <A REL=CHILD HREF="../Issues/iss243.htm">METHOD-INITFORM:FORBID-CALL-NEXT-METHOD</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
