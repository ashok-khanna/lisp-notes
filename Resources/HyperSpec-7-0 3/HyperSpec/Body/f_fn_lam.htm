<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Function FUNCTION-LAMBDA-EXPRESSION</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="s_fn.htm">
<LINK REL=UP HREF="c_data_a.htm">
<LINK REL=NEXT HREF="f_fnp.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="s_fn.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_data_a.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="f_fnp.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="function-lambda-expression"><I>Function</I> <B>FUNCTION-LAMBDA-EXPRESSION</B></A> <P>
 <P>
<P><B>Syntax:</B><P>
 <P>

<B>function-lambda-expression</B> <I>function</I><P> =&gt; <I>lambda-expression, closure-p, name</I><P>
 <P>
<P><B>Arguments and Values:</B><P>
 <P>
<I>function</I>---a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A>. <P>
<I>lambda-expression</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#lambda_expression"><I>lambda expression</I></A> or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<I>closure-p</I>---a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A>. <P>
<I>name</I>---an <A REL=DEFINITION HREF="26_glo_o.htm#object"><I>object</I></A>. <P>
<P><B>Description:</B><P>
 <P>
Returns information about <I>function</I> as follows: <P>
The <A REL=DEFINITION HREF="26_glo_p.htm#primary_value"><I>primary value</I></A>, <I>lambda-expression</I>, is <I>function</I>'s defining <A REL=DEFINITION HREF="26_glo_l.htm#lambda_expression"><I>lambda expression</I></A>, or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> if the information is not available. The <A REL=DEFINITION HREF="26_glo_l.htm#lambda_expression"><I>lambda expression</I></A> may have been pre-processed in some ways, but it should remain a suitable argument to <A REL=DEFINITION HREF="f_cmp.htm#compile"><B>compile</B></A> or <A REL=DEFINITION HREF="s_fn.htm#function"><B>function</B></A>. Any <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> may legitimately return <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> as the <I>lambda-expression</I> of any <I>function</I>. <P>
The <A REL=DEFINITION HREF="26_glo_s.htm#secondary_value"><I>secondary value</I></A>, <I>closure-p</I>, is <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> if <I>function</I>'s definition was enclosed in the <A REL=DEFINITION HREF="26_glo_n.htm#null_lexical_environment"><I>null lexical environment</I></A> or something <A REL=DEFINITION HREF="26_glo_n.htm#non-nil"><I>non-nil</I></A> if <I>function</I>'s definition might have been enclosed in some <A REL=DEFINITION HREF="26_glo_n.htm#non-null_lexical_environment"><I>non-null lexical environment</I></A>. Any <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> may legitimately return <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A> as the <I>closure-p</I> of any <I>function</I>. <P>
The <A REL=DEFINITION HREF="26_glo_t.htm#tertiary_value"><I>tertiary value</I></A>, <I>name</I>, is the ``name'' of <I>function</I>. The name is intended for debugging only and is not necessarily one that would be valid for use as a name in <A REL=DEFINITION HREF="m_defun.htm#defun"><B>defun</B></A> or <A REL=DEFINITION HREF="s_fn.htm#function"><B>function</B></A>, for example. By convention, <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> is used to mean that <I>function</I> has no name. Any <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementation</I></A> may legitimately return <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A> as the <I>name</I> of any <I>function</I>. <P>
<P><B>Examples:</B><P>
 <P>
The following examples illustrate some possible return values, but are not intended to be exhaustive: <P>
<PRE>
 (function-lambda-expression #'(lambda (x) x))
=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
OR=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA (X) X), <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA (X) X), <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL

 (function-lambda-expression
    (funcall #'(lambda () #'(lambda (x) x))))
=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
OR=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA (X) X), <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA (X) X), <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
 
 (function-lambda-expression 
    (funcall #'(lambda (x) #'(lambda () x)) nil))
=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA () X), <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
NOT=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
NOT=&gt;  (LAMBDA () X), <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
  
 (flet ((foo (x) x))
   (setf (symbol-function 'bar) #'foo)
   (function-lambda-expression #'bar))
=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
OR=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA (X) (BLOCK FOO X)), <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA (X) (BLOCK FOO X)), <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, FOO
OR=&gt;  (SI::BLOCK-LAMBDA FOO (X) X), <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, FOO
 
 (defun foo ()
   (flet ((bar (x) x))
     #'bar))
 (function-lambda-expression (foo))
=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, NIL
OR=&gt;  NIL, <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA (X) (BLOCK BAR X)), <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, NIL
OR=&gt;  (LAMBDA (X) (BLOCK BAR X)), <A REL=DEFINITION HREF="26_glo_t.htm#true">true</A>, (:INTERNAL FOO 0 BAR)
OR=&gt;  (LAMBDA (X) (BLOCK BAR X)), <A REL=DEFINITION HREF="26_glo_f.htm#false">false</A>, &quot;BAR in FOO&quot;
</PRE>
</TT> <P>
<P><B>Side Effects:</B> None.
 <P>
<P><B>Affected By:</B> None.
 <P>
<P><B>Exceptional Situations:</B> None.
 <P>
<P><B>See Also:</B> None.
 <P>
<P><B>Notes:</B><P>
 <P>
Although <A REL=DEFINITION HREF="26_glo_i.htm#implementation"><I>implementations</I></A> are free to return ``<A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, <A REL=DEFINITION HREF="26_glo_t.htm#true"><I>true</I></A>, <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>'' in all cases, they are encouraged to return a <A REL=DEFINITION HREF="26_glo_l.htm#lambda_expression"><I>lambda expression</I></A> as the <A REL=DEFINITION HREF="26_glo_p.htm#primary_value"><I>primary value</I></A> in the case where the argument was created by a call to <A REL=DEFINITION HREF="f_cmp.htm#compile"><B>compile</B></A> or <A REL=DEFINITION HREF="f_eval.htm#eval"><B>eval</B></A> (as opposed to being created by <I>loading</I> a <A REL=DEFINITION HREF="26_glo_c.htm#compiled_file"><I>compiled file</I></A>). <P>
 <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issue</A>, <I>not part of the specification</I>, applies to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss173.htm">FUNCTION-DEFINITION:JAN89-X3J13</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
