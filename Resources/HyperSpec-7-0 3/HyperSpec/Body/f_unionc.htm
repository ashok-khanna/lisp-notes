<!-- Common Lisp HyperSpec (TM), version 7.0 generated by Kent M. Pitman on Mon, 11-Apr-2005 2:31am EDT -->
<HTML>
<HEAD>
<TITLE>CLHS: Function UNION, NUNION</TITLE>
<LINK HREF="../Data/clhs.css" REL="stylesheet" TYPE="text/css" />
<META HTTP-EQUIV="Author" CONTENT="Kent M. Pitman">
<META HTTP-EQUIV="Organization" CONTENT="LispWorks Ltd.">
<LINK REL=TOP HREF="../Front/index.htm">
<LINK REL=COPYRIGHT HREF="../Front/Help.htm#Legal">
<LINK REL=DISCLAIMER HREF="../Front/Help.htm#Disclaimer">
<LINK REL=PREV HREF="f_subset.htm">
<LINK REL=UP HREF="c_conses.htm">
<LINK REL=NEXT HREF="15_.htm">
</HEAD>
<BODY>
<H1><A REV=MADE HREF="http://www.lispworks.com/"><IMG WIDTH=80 HEIGHT=65 ALT="[LISPWORKS]" SRC="../Graphics/LWSmall.gif" ALIGN=Bottom></A><A REL=TOP HREF="../Front/index.htm"><IMG WIDTH=237 HEIGHT=65 ALT="[Common Lisp HyperSpec (TM)]" SRC="../Graphics/CLHS_Sm.gif" ALIGN=Bottom></A> <A REL=PREV HREF="f_subset.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Previous]" SRC="../Graphics/Prev.gif" ALIGN=Bottom></A><A REL=UP HREF="c_conses.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Up]" SRC="../Graphics/Up.gif" ALIGN=Bottom></A><A REL=NEXT HREF="15_.htm"><IMG WIDTH=40 HEIGHT=40 ALT="[Next]" SRC="../Graphics/Next.gif" ALIGN=Bottom></A></H1>

<HR>

<A NAME="union"><A NAME="nunion"><I>Function</I> <B>UNION, NUNION</B></A></A> <P>
<P><B>Syntax:</B><P>
 <P>

<B>union</B> <I>list-1 list-2 <TT>&amp;key</TT> key test test-not</I> =&gt; <I>result-list</I><P>
 
<B>nunion</B> <I>list-1 list-2 <TT>&amp;key</TT> key test test-not</I> =&gt; <I>result-list</I><P>
 <P>
<P><B>Arguments and Values:</B><P>
 <P>
<I>list-1</I>---a <A REL=DEFINITION HREF="26_glo_p.htm#proper_list"><I>proper list</I></A>. <P>
<I>list-2</I>---a <A REL=DEFINITION HREF="26_glo_p.htm#proper_list"><I>proper list</I></A>. <P>
<I>test</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of two <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A> that returns a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A>. <P>
<I>test-not</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of two <A REL=DEFINITION HREF="26_glo_a.htm#argument"><I>arguments</I></A> that returns a <A REL=DEFINITION HREF="26_glo_g.htm#generalized_boolean"><I>generalized boolean</I></A>. <P>
<I>key</I>---a <A REL=DEFINITION HREF="26_glo_d.htm#designator"><I>designator</I></A> for a <A REL=DEFINITION HREF="26_glo_f.htm#function"><I>function</I></A> of one argument, or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>. <P>
<I>result-list</I>---a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A>. <P>
<P><B>Description:</B><P>
 <P>
<A REL=DEFINITION HREF="#union"><B>union</B></A> and <A REL=DEFINITION HREF="#nunion"><B>nunion</B></A> return a <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> that contains every element that occurs in either <I>list-1</I> or <I>list-2</I>. <P>
For all possible ordered pairs consisting of one element from <I>list-1</I> and one element from <I>list-2</I>, <TT>:test</TT> or <TT>:test-not</TT> is used to determine whether they <A REL=DEFINITION HREF="26_glo_s.htm#satisfy_the_test"><I>satisfy the test</I></A>. The first argument to the <TT>:test</TT> or <TT>:test-not</TT> function is the part of the element of <I>list-1</I> extracted by the <TT>:key</TT> function (if supplied); the second argument is the part of the element of <I>list-2</I> extracted by the <TT>:key</TT> function (if supplied). <P>
The argument to the <TT>:key</TT> function is an element of <I>list-1</I> or <I>list-2</I>; the return value is part of the supplied element. If <TT>:key</TT> is not supplied or <A REL=DEFINITION HREF="a_nil.htm#nil"><B>nil</B></A>, the element of <I>list-1</I> or <I>list-2</I> itself is supplied to the <TT>:test</TT> or <TT>:test-not</TT> function. <P>
For every matching pair, one of the two elements of the pair will be in the result. Any element from either <I>list-1</I> or <I>list-2</I> that matches no element of the other will appear in the result. <P>
If there is a duplication between <I>list-1</I> and <I>list-2</I>, only one of the duplicate instances will be in the result. If either <I>list-1</I> or <I>list-2</I> has duplicate entries within it, the redundant entries might or might not appear in the result. <P>
The order of elements in the result do not have to reflect the ordering of <I>list-1</I> or <I>list-2</I> in any way. The result <A REL=DEFINITION HREF="26_glo_l.htm#list"><I>list</I></A> may be <A REL=DEFINITION HREF="f_eq.htm#eq"><B>eq</B></A> to either <I>list-1</I> or <I>list-2</I> if appropriate. <P>
<P><B>Examples:</B><P>
 <P>
<PRE>
 (union '(a b c) '(f a d))
=&gt;  (A B C F D)
OR=&gt;  (B C F A D)
OR=&gt;  (D F A B C)
 (union '((x 5) (y 6)) '((z 2) (x 4)) :key #'car)
=&gt;  ((X 5) (Y 6) (Z 2))
OR=&gt;  ((X 4) (Y 6) (Z 2))

 (setq lst1 (list 1 2 '(1 2) &quot;a&quot; &quot;b&quot;)
       lst2 (list 2 3 '(2 3) &quot;B&quot; &quot;C&quot;))
=&gt;  (2 3 (2 3) &quot;B&quot; &quot;C&quot;)
 (nunion lst1 lst2)
=&gt;  (1 (1 2) &quot;a&quot; &quot;b&quot; 2 3 (2 3) &quot;B&quot; &quot;C&quot;) 
OR=&gt;  (1 2 (1 2) &quot;a&quot; &quot;b&quot; &quot;C&quot; &quot;B&quot; (2 3) 3)
</PRE>
</TT> <P>
<P><B>Side Effects:</B><P>
 <P>
 <A REL=DEFINITION HREF="#nunion"><B>nunion</B></A> is permitted to modify any part, <A REL=DEFINITION HREF="26_glo_c.htm#car"><I>car</I></A> or <A REL=DEFINITION HREF="26_glo_c.htm#cdr"><I>cdr</I></A>, of the <A REL=DEFINITION HREF="26_glo_l.htm#list_structure"><I>list structure</I></A> of <I>list-1</I> or <I>list-2</I>.  <P>
<P><B>Affected By:</B> None.
 <P>
<P><B>Exceptional Situations:</B><P>
 <P>
Should be prepared to signal an error of <A REL=DEFINITION HREF="26_glo_t.htm#type"><I>type</I></A> <A REL=DEFINITION HREF="e_tp_err.htm#type-error"><B>type-error</B></A> if <I>list-1</I> and <I>list-2</I> are not <A REL=DEFINITION HREF="26_glo_p.htm#proper_list"><I>proper lists</I></A>. <P>
<P><B>See Also:</B><P>
 <P>
<A REL=DEFINITION HREF="f_isec_.htm#intersection"><B>intersection</B></A>,  <A REL=CHILD HREF="03_ba.htm">Section 3.2.1 (Compiler Terminology)</A>,   <A REL=CHILD HREF="03_f.htm">Section 3.6 (Traversal Rules and Side Effects)</A>  <P>
<P><B>Notes:</B><P>
 <P>
 The <TT>:test-not</TT> parameter is deprecated.  <P>
Since the <A REL=DEFINITION HREF="#nunion"><B>nunion</B></A> side effect is not required, it should not be used in for-effect-only positions in portable code. <P>
<P><HR>The following <A REL=META HREF="../Front/X3J13Iss.htm">X3J13 cleanup issues</A>, <I>not part of the specification</I>, apply to this section:<P><UL><LI> <A REL=CHILD HREF="../Issues/iss345.htm">TEST-NOT-IF-NOT:FLUSH-ALL</A><LI> <A REL=CHILD HREF="../Issues/iss240.htm">MAPPING-DESTRUCTIVE-INTERACTION:EXPLICITLY-VAGUE</A><LI> <A REL=CHILD HREF="../Issues/iss083.htm">CONSTANT-MODIFICATION:DISALLOW</A><LI> <A REL=CHILD HREF="../Issues/iss293.htm">REMF-DESTRUCTION-UNSPECIFIED:X3J13-MAR-89</A><P></UL><HR>

<A REL=NAVIGATOR HREF="../Front/StartPts.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Starting Points]" SRC="../Graphics/StartPts.gif" ALIGN=Bottom></A><A REL=TOC HREF="../Front/Contents.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Contents]" SRC="../Graphics/Contents.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Master.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Index]" SRC="../Graphics/Index.gif" ALIGN=Bottom></A><A REL=INDEX HREF="../Front/X_Symbol.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Symbols]" SRC="../Graphics/Symbols.gif" ALIGN=Bottom></A><A REL=GLOSSARY HREF="../Body/26_a.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Glossary]" SRC="../Graphics/Glossary.gif" ALIGN=Bottom></A><A HREF="../Front/X3J13Iss.htm"><IMG WIDTH=80 HEIGHT=40 ALT="[Issues]" SRC="../Graphics/Issues.gif" ALIGN=Bottom></A><BR>

<A REL=COPYRIGHT HREF="../Front/Help.htm#Legal"><I>Copyright 1996-2005, LispWorks Ltd.  All rights reserved.</I></A><P>
</BODY>
</HTML>
